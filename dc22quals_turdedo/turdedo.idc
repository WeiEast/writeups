#define UNLOADED_FILE   1
#include <idc.idc>

static main(void)
{
  // set 'loading idc file' mode
  SetCharPrm(INF_GENFLAGS, INFFL_LOADIDC|GetCharPrm(INF_GENFLAGS));
  GenInfo();            // various settings
  Segments();           // segmentation
  Enums();              // enumerations
  Structures();         // structure types
  Patches();            // manual patches
  SegRegs();            // segment register values
  Bytes();              // individual bytes (code,data)
  Functions();          // function definitions
  // clear 'loading idc file' mode
  SetCharPrm(INF_GENFLAGS, ~INFFL_LOADIDC&GetCharPrm(INF_GENFLAGS));
}

//------------------------------------------------------------------------
// General information

static GenInfo(void) {

        DeleteAll();    // purge database
	SetPrcsr("metapc");
	SetCharPrm(INF_COMPILER, 6);
	StringStp(0xA);
	Tabs(1);
	Comments(0);
	Voids(0);
	XrefShow(2);
	AutoShow(1);
	Indent(16);
	CmtIndent(40);
	TailDepth(0x10);
	LoadTil("gnuunx");
}

//------------------------------------------------------------------------
// Information about segmentation

static Segments(void) {
	SetSelector(0X1,0);
	SetSelector(0X2,0);
	SetSelector(0X3,0);
	SetSelector(0X4,0);
	SetSelector(0X5,0);
	SetSelector(0X6,0);
	SetSelector(0X7,0);
	SetSelector(0X8,0);
	SetSelector(0X9,0);
	SetSelector(0XA,0);
	SetSelector(0XB,0);
	SetSelector(0XC,0);
	SetSelector(0XD,0);
	SetSelector(0XE,0);
	SetSelector(0XF,0);
	;
	SegCreate(0X80489A8,0X80489D6,0X1,1,5,2);
	SegRename(0X80489A8,".init");
	SegClass (0X80489A8,"CODE");
	SegDefReg(0x80489A8,"ds",0xD);
	SetSegmentType(0X80489A8,2);
	SegCreate(0X80489E0,0X8048D60,0X2,1,3,2);
	SegRename(0X80489E0,".plt");
	SegClass (0X80489E0,"CODE");
	SegDefReg(0x80489E0,"ds",0xD);
	SetSegmentType(0X80489E0,2);
	SegCreate(0X8048D60,0X804C38C,0X3,1,3,2);
	SegRename(0X8048D60,".text");
	SegClass (0X8048D60,"CODE");
	SegDefReg(0x8048D60,"ds",0xD);
	SetSegmentType(0X8048D60,2);
	SegCreate(0X804C38C,0X804C3A6,0X4,1,5,2);
	SegRename(0X804C38C,".fini");
	SegClass (0X804C38C,"CODE");
	SegDefReg(0x804C38C,"ds",0xD);
	SetSegmentType(0X804C38C,2);
	SegCreate(0X804C3A8,0X804C74E,0X5,1,5,2);
	SegRename(0X804C3A8,".rodata");
	SegClass (0X804C3A8,"CONST");
	SegDefReg(0x804C3A8,"ds",0xD);
	SetSegmentType(0X804C3A8,3);
	SegCreate(0X804C750,0X804C82C,0X6,1,5,2);
	SegRename(0X804C750,".eh_frame_hdr");
	SegClass (0X804C750,"CONST");
	SegDefReg(0x804C750,"ds",0xD);
	SetSegmentType(0X804C750,3);
	SegCreate(0X804C82C,0X804CBF4,0X7,1,5,2);
	SegRename(0X804C82C,".eh_frame");
	SegClass (0X804C82C,"CONST");
	SegDefReg(0x804C82C,"ds",0xD);
	SetSegmentType(0X804C82C,3);
	SegCreate(0X804DF14,0X804DF1C,0X8,1,5,2);
	SegRename(0X804DF14,".ctors");
	SegClass (0X804DF14,"DATA");
	SegDefReg(0x804DF14,"ds",0xD);
	SetSegmentType(0X804DF14,3);
	SegCreate(0X804DF1C,0X804DF24,0X9,1,5,2);
	SegRename(0X804DF1C,".dtors");
	SegClass (0X804DF1C,"DATA");
	SegDefReg(0x804DF1C,"ds",0xD);
	SetSegmentType(0X804DF1C,3);
	SegCreate(0X804DF24,0X804DF28,0XA,1,5,2);
	SegRename(0X804DF24,".jcr");
	SegClass (0X804DF24,"DATA");
	SegDefReg(0x804DF24,"ds",0xD);
	SetSegmentType(0X804DF24,3);
	SegCreate(0X804DFF0,0X804DFF4,0XB,1,5,2);
	SegRename(0X804DFF0,".got");
	SegClass (0X804DFF0,"DATA");
	SegDefReg(0x804DFF0,"ds",0xD);
	SetSegmentType(0X804DFF0,3);
	SegCreate(0X804DFF4,0X804E0DC,0XC,1,5,2);
	SegRename(0X804DFF4,".got.plt");
	SegClass (0X804DFF4,"DATA");
	SegDefReg(0x804DFF4,"ds",0xD);
	SetSegmentType(0X804DFF4,3);
	SegCreate(0X804E0E0,0X804E14C,0XD,1,8,2);
	SegRename(0X804E0E0,".data");
	SegClass (0X804E0E0,"DATA");
	SegDefReg(0x804E0E0,"ds",0xD);
	SetSegmentType(0X804E0E0,3);
	SegCreate(0X804E14C,0X804E184,0XE,1,5,2);
	SegRename(0X804E14C,".bss");
	SegClass (0X804E14C,"BSS");
	SegDefReg(0x804E14C,"ds",0xD);
	SetSegmentType(0X804E14C,9);
	SegCreate(0X804E184,0X804E260,0XF,1,3,2);
	SegRename(0X804E184,"extern");
	SegClass (0X804E184,"");
	SetSegmentType(0X804E184,1);
	LowVoids(0x80489A8);
	HighVoids(0x804E26C);
}

static Enums_0(id) {

	id = AddEnum(-1,"MACRO_SIGCHLD",0x2220000);
	AddConstEx(id,"SIGCHLD",	0X11,	-1);
	AddConstEx(id,"SIGCONT",	0X12,	-1);
	AddConstEx(id,"SIGSTOP",	0X13,	-1);
	AddConstEx(id,"SIGTSTP",	0X14,	-1);
	AddConstEx(id,"SIGTTIN",	0X15,	-1);
	AddConstEx(id,"SIGTTOU",	0X16,	-1);
	AddConstEx(id,"SIGURG",	0X17,	-1);
	AddConstEx(id,"SIGXCPU",	0X18,	-1);
	AddConstEx(id,"SIGXFSZ",	0X19,	-1);
	AddConstEx(id,"SIGVTALRM",	0X1A,	-1);
	AddConstEx(id,"SIGPROF",	0X1B,	-1);
	AddConstEx(id,"SIGWINCH",	0X1C,	-1);
	id = AddEnum(-1,"MACRO_SIGIOT",0x2220000);
	AddConstEx(id,"SIGIOT",	0X6,	-1);
	AddConstEx(id,"SIGBUS",	0X7,	-1);
	AddConstEx(id,"SIGFPE",	0X8,	-1);
	AddConstEx(id,"SIGKILL",	0X9,	-1);
	AddConstEx(id,"SIGUSR1",	0XA,	-1);
	AddConstEx(id,"SIGSEGV",	0XB,	-1);
	AddConstEx(id,"SIGUSR2",	0XC,	-1);
	AddConstEx(id,"SIGPIPE",	0XD,	-1);
	AddConstEx(id,"SIGALRM",	0XE,	-1);
	AddConstEx(id,"SIGTERM",	0XF,	-1);
	AddConstEx(id,"SIGSTKFLT",	0X10,	-1);
	id = AddEnum(-1,"MACRO_PF_ROUTE",0x2220000);
	AddConstEx(id,"PF_ROUTE",	0X10,	-1);
	AddConstEx(id,"PF_PACKET",	0X11,	-1);
	AddConstEx(id,"PF_ASH",	0X12,	-1);
	AddConstEx(id,"PF_ECONET",	0X13,	-1);
	AddConstEx(id,"PF_ATMSVC",	0X14,	-1);
	AddConstEx(id,"PF_SNA",	0X16,	-1);
	AddConstEx(id,"PF_IRDA",	0X17,	-1);
	AddConstEx(id,"PF_PPPOX",	0X18,	-1);
	AddConstEx(id,"PF_WANPIPE",	0X19,	-1);
	AddConstEx(id,"PF_BLUETOOTH",	0X1F,	-1);
	AddConstEx(id,"PF_MAX",	0X20,	-1);
	id = AddEnum(-1,"MACRO_TIOCSER",0x1100000);
	AddConstEx(id,"TIOCSER_TEMT",	0X1,	-1);
	AddConstEx(id,"SIOCADDRT",	0X890B,	-1);
	AddConstEx(id,"SIOCDELRT",	0X890C,	-1);
	AddConstEx(id,"SIOCRTMSG",	0X890D,	-1);
	AddConstEx(id,"SIOCGIFNAME",	0X8910,	-1);
	AddConstEx(id,"SIOCSIFLINK",	0X8911,	-1);
	AddConstEx(id,"SIOCGIFCONF",	0X8912,	-1);
	AddConstEx(id,"SIOCGIFFLAGS",	0X8913,	-1);
	AddConstEx(id,"SIOCSIFFLAGS",	0X8914,	-1);
	AddConstEx(id,"SIOCGIFADDR",	0X8915,	-1);
	AddConstEx(id,"SIOCSIFADDR",	0X8916,	-1);
	AddConstEx(id,"SIOCGIFDSTADDR",	0X8917,	-1);
	AddConstEx(id,"SIOCSIFDSTADDR",	0X8918,	-1);
	AddConstEx(id,"SIOCGIFBRDADDR",	0X8919,	-1);
	AddConstEx(id,"SIOCSIFBRDADDR",	0X891A,	-1);
	AddConstEx(id,"SIOCGIFNETMASK",	0X891B,	-1);
	AddConstEx(id,"SIOCSIFNETMASK",	0X891C,	-1);
	AddConstEx(id,"SIOCGIFMETRIC",	0X891D,	-1);
	AddConstEx(id,"SIOCSIFMETRIC",	0X891E,	-1);
	AddConstEx(id,"SIOCGIFMEM",	0X891F,	-1);
	AddConstEx(id,"SIOCSIFMEM",	0X8920,	-1);
	AddConstEx(id,"SIOCGIFMTU",	0X8921,	-1);
	AddConstEx(id,"SIOCSIFMTU",	0X8922,	-1);
	AddConstEx(id,"SIOCSIFNAME",	0X8923,	-1);
	AddConstEx(id,"SIOCSIFHWADDR",	0X8924,	-1);
	AddConstEx(id,"SIOCGIFENCAP",	0X8925,	-1);
	AddConstEx(id,"SIOCSIFENCAP",	0X8926,	-1);
	AddConstEx(id,"SIOCGIFHWADDR",	0X8927,	-1);
	AddConstEx(id,"SIOCGIFSLAVE",	0X8929,	-1);
	AddConstEx(id,"SIOCSIFSLAVE",	0X8930,	-1);
	AddConstEx(id,"SIOCADDMULTI",	0X8931,	-1);
	AddConstEx(id,"SIOCDELMULTI",	0X8932,	-1);
	AddConstEx(id,"SIOCGIFINDEX",	0X8933,	-1);
	id = AddEnum(-1,"$9C5D24A798A79904BCA8E9BE0F0E493F",0x1100000);
	AddConstEx(id,"IPPROTO_IP",	0,	-1);
	AddConstEx(id,"IPPROTO_HOPOPTS",	0,	-1);
	AddConstEx(id,"IPPROTO_ICMP",	0X1,	-1);
	AddConstEx(id,"IPPROTO_IGMP",	0X2,	-1);
	AddConstEx(id,"IPPROTO_IPIP",	0X4,	-1);
	AddConstEx(id,"IPPROTO_TCP",	0X6,	-1);
	AddConstEx(id,"IPPROTO_EGP",	0X8,	-1);
	AddConstEx(id,"IPPROTO_PUP",	0XC,	-1);
	AddConstEx(id,"IPPROTO_UDP",	0X11,	-1);
	AddConstEx(id,"IPPROTO_IDP",	0X16,	-1);
	AddConstEx(id,"IPPROTO_TP",	0X1D,	-1);
	AddConstEx(id,"IPPROTO_IPV6",	0X29,	-1);
	AddConstEx(id,"IPPROTO_ROUTING",	0X2B,	-1);
	AddConstEx(id,"IPPROTO_FRAGMENT",	0X2C,	-1);
	AddConstEx(id,"IPPROTO_RSVP",	0X2E,	-1);
	AddConstEx(id,"IPPROTO_GRE",	0X2F,	-1);
	AddConstEx(id,"IPPROTO_ESP",	0X32,	-1);
	AddConstEx(id,"IPPROTO_AH",	0X33,	-1);
	AddConstEx(id,"IPPROTO_ICMPV6",	0X3A,	-1);
	AddConstEx(id,"IPPROTO_NONE",	0X3B,	-1);
	AddConstEx(id,"IPPROTO_DSTOPTS",	0X3C,	-1);
	AddConstEx(id,"IPPROTO_MTP",	0X5C,	-1);
	AddConstEx(id,"IPPROTO_ENCAP",	0X62,	-1);
	AddConstEx(id,"IPPROTO_PIM",	0X67,	-1);
	AddConstEx(id,"IPPROTO_COMP",	0X6C,	-1);
	AddConstEx(id,"IPPROTO_SCTP",	0X84,	-1);
	AddConstEx(id,"IPPROTO_RAW",	0XFF,	-1);
	AddConstEx(id,"IPPROTO_MAX",	0X100,	-1);
	id = AddEnum(-1,"__socket_type",0x1100000);
	AddConstEx(id,"SOCK_STREAM",	0X1,	-1);
	AddConstEx(id,"SOCK_DGRAM",	0X2,	-1);
	AddConstEx(id,"SOCK_RAW",	0X3,	-1);
	AddConstEx(id,"SOCK_RDM",	0X4,	-1);
	AddConstEx(id,"SOCK_SEQPACKET",	0X5,	-1);
	AddConstEx(id,"SOCK_PACKET",	0XA,	-1);
	id = AddEnum(-1,"STATE",0x1100000);
	AddConstEx(id,"SYN",	0,	-1);
	AddConstEx(id,"SYNACK",	0X1,	-1);
	AddConstEx(id,"ACK",	0X2,	-1);
	AddConstEx(id,"ESTABLISHED",	0X3,	-1);
	return id;
}

//------------------------------------------------------------------------
// Information about enum types

static Enums(void) {
        auto id;
        BeginTypeUpdating(UTP_ENUM);
	id = Enums_0(id);
        EndTypeUpdating(UTP_ENUM);
}

static Structures_0(id) {
        auto mid;

	id = AddStrucEx(-1,"sockaddr",0);
	id = AddStrucEx(-1,"ip6_hdr::$BD1196ABBEDCD1C568FFAAAAE6BA5314",1);
	id = AddStrucEx(-1,"ip6_hdr::$BD1196ABBEDCD1C568FFAAAAE6BA5314::ip6_hdrctl",0);
	id = AddStrucEx(-1,"in6_addr",0);
	id = AddStrucEx(-1,"in6_addr::$B80A5568EDCB3DEA112C17957211D170",1);
	id = AddStrucEx(-1,"udp_ip6::udphdr",0);
	id = AddStrucEx(-1,"udphdr",0);
	id = AddStrucEx(-1,"struct_ptr",0);
	id = AddStrucEx(-1,"ip6_hdr::ip6_hdrctl",0);
	id = AddStrucEx(-1,"ip6_hdr",0);
	id = AddStrucEx(-1,"struct_frag",0);
	id = AddStrucEx(-1,"ip6_frag",0);
	id = AddStrucEx(-1,"ip6_frag_packet",0);
	id = AddStrucEx(-1,"udp_ip62",0);
	
	id = GetStrucIdByName("ip6_hdr::$BD1196ABBEDCD1C568FFAAAAE6BA5314::ip6_hdrctl");
	mid = AddStrucMember(id,"ip6_un1_flow",	0,	0x20000400,	-1,	4);
	mid = AddStrucMember(id,"ip6_un1_plen",	0X4,	0x10000400,	-1,	2);
	mid = AddStrucMember(id,"ip6_un1_nxt",	0X6,	0x000400,	-1,	1);
	mid = AddStrucMember(id,"ip6_un1_hlim",	0X7,	0x000400,	-1,	1);
	
	id = GetStrucIdByName("ip6_hdr::$BD1196ABBEDCD1C568FFAAAAE6BA5314");
	mid = AddStrucMember(id,"ip6_un1",	0,	0x60000400,	GetStrucIdByName("ip6_hdr::$BD1196ABBEDCD1C568FFAAAAE6BA5314::ip6_hdrctl"),	512);
	mid = AddStrucMember(id,"ip6_un2_vfc",	0,	0x000400,	-1,	1);
	
	id = GetStrucIdByName("in6_addr::$B80A5568EDCB3DEA112C17957211D170");
	mid = AddStrucMember(id,"__u6_addr8",	0,	0x000400,	-1,	16);
	mid = AddStrucMember(id,"__u6_addr16",	0,	0x10000400,	-1,	16);
	mid = AddStrucMember(id,"__u6_addr32",	0,	0x20000400,	-1,	16);
	
	id = GetStrucIdByName("udp_ip6::udphdr");
	mid = AddStrucMember(id,"uh_sport",	0,	0x10000400,	-1,	2);
	mid = AddStrucMember(id,"uh_dport",	0X2,	0x10000400,	-1,	2);
	mid = AddStrucMember(id,"uh_ulen",	0X4,	0x10000400,	-1,	2);
	mid = AddStrucMember(id,"uh_sum",	0X6,	0x10000400,	-1,	2);
	
	id = GetStrucIdByName("sockaddr");
	mid = AddStrucMember(id,"sa_family",	0,	0x10000400,	-1,	2);
	mid = AddStrucMember(id,"sa_data",	0X2,	0x000400,	-1,	14);
	
	id = GetStrucIdByName("struct_ptr");
	mid = AddStrucMember(id,"child_process",	0,	0x20000400,	-1,	4);
	mid = AddStrucMember(id,"child_pipe",	0X4,	0x20000400,	-1,	8);
	mid = AddStrucMember(id,"tunnel_sockaddr",	0XC,	0x60000400,	GetStrucIdByName("sockaddr"),	16);
	mid = AddStrucMember(id,"field_1C",	0X1C,	0x20000400,	-1,	4);
	mid = AddStrucMember(id,"ip6_src_addr",	0X20,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = AddStrucMember(id,"field_24",	0X24,	0x20000400,	-1,	4);
	mid = AddStrucMember(id,"field_28",	0X28,	0x20000400,	-1,	4);
	mid = AddStrucMember(id,"field_2C",	0X2C,	0x20000400,	-1,	4);
	mid = AddStrucMember(id,"ip6_dst_addr",	0X30,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = AddStrucMember(id,"field_34",	0X34,	0x20000400,	-1,	4);
	mid = AddStrucMember(id,"field_38",	0X38,	0x20000400,	-1,	4);
	mid = AddStrucMember(id,"field_3C",	0X3C,	0x20000400,	-1,	4);
	mid = AddStrucMember(id,"udp_sport",	0X40,	0x10000400,	-1,	2);
	mid = AddStrucMember(id,"udp_dport",	0X42,	0x10000400,	-1,	2);
	mid = AddStrucMember(id,"rand_value",	0X44,	0x20000400,	-1,	4);
	mid = AddStrucMember(id,"time",	0X48,	0x20000400,	-1,	4);
	mid = AddStrucMember(id,"state",	0X4C,	0x28800400,	GetEnum("STATE"),	4);
	mid = AddStrucMember(id,"next",	0X50,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = AddStrucMember(id,"field_54",	0X54,	0x20000400,	-1,	4);
	
	id = GetStrucIdByName("ip6_hdr::ip6_hdrctl");
	mid = AddStrucMember(id,"ip6_un1_flow",	0,	0x20000400,	-1,	4);
	mid = AddStrucMember(id,"ip6_un1_plen",	0X4,	0x10000400,	-1,	2);
	mid = AddStrucMember(id,"ip6_un1_nxt",	0X6,	0x000400,	-1,	1);
	mid = AddStrucMember(id,"ip6_un1_hlim",	0X7,	0x000400,	-1,	1);
	
	id = GetStrucIdByName("in6_addr");
	mid = AddStrucMember(id,"__u6_addr32",	0,	0x25500400,	0XFFFFFFFF,	16,	0XFFFFFFFF,	0,	0x000002);
	
	id = GetStrucIdByName("struct_frag");
	mid = AddStrucMember(id,"ip6f_ident",	0,	0x20000400,	-1,	4);
	mid = AddStrucMember(id,"src_addr",	0X4,	0x60000400,	GetStrucIdByName("in6_addr"),	16);
	mid = AddStrucMember(id,"dst_addr",	0X14,	0x60000400,	GetStrucIdByName("in6_addr"),	16);
	mid = AddStrucMember(id,"frag_data",	0X24,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = AddStrucMember(id,"len",	0X28,	0x10000400,	-1,	2);
	mid = AddStrucMember(id,"field_2A",	0X2A,	0x10000400,	-1,	2);
	mid = AddStrucMember(id,"time",	0X2C,	0x20000400,	-1,	4);
	mid = AddStrucMember(id,"next",	0X30,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	
	id = GetStrucIdByName("ip6_hdr");
	mid = AddStrucMember(id,"ip6_un1_flow",	0,	0x20000400,	-1,	4);
	mid = AddStrucMember(id,"ip6_un1_plen",	0X4,	0x10000400,	-1,	2);
	mid = AddStrucMember(id,"ip6_un1_nxt",	0X6,	0x000400,	-1,	1);
	mid = AddStrucMember(id,"ip6_un1_hlim",	0X7,	0x000400,	-1,	1);
	mid = AddStrucMember(id,"ip6_src",	0X8,	0x60000400,	GetStrucIdByName("in6_addr"),	16);
	mid = AddStrucMember(id,"ip6_dst",	0X18,	0x60000400,	GetStrucIdByName("in6_addr"),	16);
	
	id = GetStrucIdByName("ip6_frag");
	mid = AddStrucMember(id,"ip6f_nxt",	0,	0x000400,	-1,	1);
	mid = AddStrucMember(id,"ip6f_reserved",	0X1,	0x000400,	-1,	1);
	mid = AddStrucMember(id,"ip6f_offlg",	0X2,	0x10000400,	-1,	2);
	mid = AddStrucMember(id,"ip6f_ident",	0X4,	0x20000400,	-1,	4);
	
	id = GetStrucIdByName("ip6_frag_packet");
	mid = AddStrucMember(id,"ip6hdr",	0,	0x60000400,	GetStrucIdByName("ip6_hdr"),	40);
	mid = AddStrucMember(id,"frag_packet",	0X28,	0x60000400,	GetStrucIdByName("ip6_frag"),	8);
	
	id = GetStrucIdByName("udphdr");
	mid = AddStrucMember(id,"uh_sport",	0,	0x10000400,	-1,	2);
	mid = AddStrucMember(id,"uh_dport",	0X2,	0x10000400,	-1,	2);
	mid = AddStrucMember(id,"uh_ulen",	0X4,	0x10000400,	-1,	2);
	mid = AddStrucMember(id,"uh_sum",	0X6,	0x10000400,	-1,	2);
	
	id = GetStrucIdByName("udp_ip62");
	mid = AddStrucMember(id,"hdr",	0,	0x60000400,	GetStrucIdByName("ip6_hdr"),	40);
	mid = AddStrucMember(id,"udphd",	0X28,	0x60000400,	GetStrucIdByName("udphdr"),	8);
	return id;
}

//------------------------------------------------------------------------
// Information about structure types

static Structures(void) {
        auto id;
        BeginTypeUpdating(UTP_STRUCT);
	id = Structures_0(id);
}

//------------------------------------------------------------------------
// Information about bytes

static Bytes_0(void) {
        auto x;
#define id x

	ExtLinA		(0X80489A8,	0,	"; File Name   : /Users/ryan/ctf/legit/turdedo_5f55104b1d60779dbe8dcf5df2b186ad");
	ExtLinA		(0X80489A8,	1,	"; Format      : ELF for Intel 386 (Executable)");
	ExtLinA		(0X80489A8,	2,	"; Imagebase   : 8048000");
	ExtLinA		(0X80489A8,	3,	"; Interpreter '/lib/ld-linux.so.2'");
	ExtLinA		(0X80489A8,	4,	"; Needed Library 'libc.so.6'");
	ExtLinA		(0X80489A8,	5,	"; ");
	MakeCode	(0X80489A8);
	MakeName	(0X80489A8,	".init_proc");
	MakeCode	(x=0X80489A9);
	OpHex		(x,	1);
	MakeCode	(x=0X80489B8);
	OpOff		(x,	1,	0X804DFF4);
	OpOff		(x,	129,	0X804DFF4);
	MakeCode	(x=0X80489D1);
	OpHex		(x,	1);
	MakeDword	(0X80489E0);
	MakeArray	(0X80489E0,	0X4);
	MakeCode	(0X80489F0);
	MakeName	(0X80489F0,	".getpwnam");
	MakeWord	(0X80489F6);
	MakeDword	(0X80489F8);
	MakeArray	(0X80489F8,	0X2);
	MakeCode	(0X8048A00);
	MakeName	(0X8048A00,	".setresuid");
	MakeWord	(0X8048A06);
	MakeDword	(0X8048A08);
	MakeArray	(0X8048A08,	0X2);
	MakeCode	(0X8048A10);
	MakeName	(0X8048A10,	".read");
	MakeWord	(0X8048A16);
	MakeDword	(0X8048A18);
	MakeArray	(0X8048A18,	0X2);
	MakeCode	(0X8048A20);
	MakeName	(0X8048A20,	".printf");
	MakeWord	(0X8048A26);
	MakeDword	(0X8048A28);
	MakeArray	(0X8048A28,	0X2);
	MakeCode	(0X8048A30);
	MakeName	(0X8048A30,	".free");
	MakeWord	(0X8048A36);
	MakeDword	(0X8048A38);
	MakeArray	(0X8048A38,	0X2);
	MakeCode	(0X8048A40);
	MakeName	(0X8048A40,	".memcpy");
	MakeWord	(0X8048A46);
	MakeDword	(0X8048A48);
	MakeArray	(0X8048A48,	0X2);
	MakeCode	(0X8048A50);
	MakeName	(0X8048A50,	".time");
	MakeWord	(0X8048A56);
	MakeDword	(0X8048A58);
	MakeArray	(0X8048A58,	0X2);
	MakeCode	(0X8048A60);
	MakeName	(0X8048A60,	".signal");
	MakeWord	(0X8048A66);
	MakeDword	(0X8048A68);
	MakeArray	(0X8048A68,	0X2);
	MakeCode	(0X8048A70);
	MakeName	(0X8048A70,	".memcmp");
	MakeWord	(0X8048A76);
	MakeDword	(0X8048A78);
	MakeArray	(0X8048A78,	0X2);
	MakeCode	(0X8048A80);
	MakeName	(0X8048A80,	".chdir");
	MakeWord	(0X8048A86);
	MakeDword	(0X8048A88);
	MakeArray	(0X8048A88,	0X2);
	MakeCode	(0X8048A90);
	MakeName	(0X8048A90,	".recvfrom");
	MakeWord	(0X8048A96);
	MakeDword	(0X8048A98);
	MakeArray	(0X8048A98,	0X2);
	MakeCode	(0X8048AA0);
	MakeName	(0X8048AA0,	".popen");
	MakeWord	(0X8048AA6);
	MakeDword	(0X8048AA8);
	MakeArray	(0X8048AA8,	0X2);
	MakeCode	(0X8048AB0);
	MakeName	(0X8048AB0,	".__stack_chk_fail");
	MakeWord	(0X8048AB6);
	MakeDword	(0X8048AB8);
	MakeArray	(0X8048AB8,	0X2);
	MakeCode	(0X8048AC0);
	MakeName	(0X8048AC0,	".getuid");
	MakeWord	(0X8048AC6);
	MakeDword	(0X8048AC8);
	MakeArray	(0X8048AC8,	0X2);
	MakeCode	(0X8048AD0);
	MakeName	(0X8048AD0,	".initgroups");
	MakeWord	(0X8048AD6);
	MakeDword	(0X8048AD8);
	MakeArray	(0X8048AD8,	0X2);
	MakeCode	(0X8048AE0);
	MakeName	(0X8048AE0,	".htons");
	MakeWord	(0X8048AE6);
	MakeDword	(0X8048AE8);
	MakeArray	(0X8048AE8,	0X2);
	MakeCode	(0X8048AF0);
	MakeName	(0X8048AF0,	".geteuid");
	MakeWord	(0X8048AF6);
	MakeDword	(0X8048AF8);
	MakeArray	(0X8048AF8,	0X2);
	MakeCode	(0X8048B00);
	MakeName	(0X8048B00,	".getegid");
	MakeWord	(0X8048B06);
	MakeDword	(0X8048B08);
	MakeArray	(0X8048B08,	0X2);
	MakeCode	(0X8048B10);
	MakeName	(0X8048B10,	".ioctl");
	MakeWord	(0X8048B16);
	MakeDword	(0X8048B18);
	MakeArray	(0X8048B18,	0X2);
	MakeCode	(0X8048B20);
	MakeName	(0X8048B20,	".seteuid");
	MakeWord	(0X8048B26);
	MakeDword	(0X8048B28);
	MakeArray	(0X8048B28,	0X2);
	MakeCode	(0X8048B30);
	MakeName	(0X8048B30,	".perror");
	MakeWord	(0X8048B36);
	MakeDword	(0X8048B38);
	MakeArray	(0X8048B38,	0X2);
	MakeCode	(0X8048B40);
	MakeName	(0X8048B40,	".fwrite");
	MakeWord	(0X8048B46);
	MakeDword	(0X8048B48);
	MakeArray	(0X8048B48,	0X2);
	MakeCode	(0X8048B50);
	MakeName	(0X8048B50,	".waitpid");
	MakeWord	(0X8048B56);
	MakeDword	(0X8048B58);
	MakeArray	(0X8048B58,	0X2);
	MakeCode	(0X8048B60);
	MakeName	(0X8048B60,	".fread");
	MakeWord	(0X8048B66);
	MakeDword	(0X8048B68);
	MakeArray	(0X8048B68,	0X2);
	MakeCode	(0X8048B70);
	MakeName	(0X8048B70,	".setgid");
	MakeWord	(0X8048B76);
	MakeDword	(0X8048B78);
	MakeArray	(0X8048B78,	0X2);
	MakeCode	(0X8048B80);
	MakeName	(0X8048B80,	".puts");
	MakeWord	(0X8048B86);
	MakeDword	(0X8048B88);
	MakeArray	(0X8048B88,	0X2);
	MakeCode	(0X8048B90);
	MakeName	(0X8048B90,	".ntohl");
	MakeWord	(0X8048B96);
	MakeDword	(0X8048B98);
	MakeArray	(0X8048B98,	0X2);
	MakeCode	(0X8048BA0);
	MakeName	(0X8048BA0,	".__gmon_start__");
	MakeWord	(0X8048BA6);
	MakeDword	(0X8048BA8);
	MakeArray	(0X8048BA8,	0X2);
	MakeCode	(0X8048BB0);
	MakeName	(0X8048BB0,	".exit");
	MakeWord	(0X8048BB6);
	MakeDword	(0X8048BB8);
	MakeArray	(0X8048BB8,	0X2);
	MakeCode	(0X8048BC0);
	MakeName	(0X8048BC0,	".kill");
	MakeWord	(0X8048BC6);
	MakeDword	(0X8048BC8);
	MakeArray	(0X8048BC8,	0X2);
	MakeCode	(0X8048BD0);
	MakeName	(0X8048BD0,	".pclose");
	MakeWord	(0X8048BD6);
	MakeDword	(0X8048BD8);
	MakeArray	(0X8048BD8,	0X2);
	MakeCode	(0X8048BE0);
	MakeName	(0X8048BE0,	".srand");
	MakeWord	(0X8048BE6);
	MakeDword	(0X8048BE8);
	MakeArray	(0X8048BE8,	0X2);
	MakeCode	(0X8048BF0);
	MakeName	(0X8048BF0,	".strchr");
	MakeWord	(0X8048BF6);
	MakeDword	(0X8048BF8);
	MakeArray	(0X8048BF8,	0X2);
	MakeCode	(0X8048C00);
	MakeName	(0X8048C00,	".__libc_start_main");
	MakeWord	(0X8048C06);
	MakeDword	(0X8048C08);
	MakeArray	(0X8048C08,	0X2);
	MakeCode	(0X8048C10);
	MakeName	(0X8048C10,	".fprintf");
	MakeWord	(0X8048C16);
	MakeDword	(0X8048C18);
	MakeArray	(0X8048C18,	0X2);
	MakeCode	(0X8048C20);
	MakeName	(0X8048C20,	".write");
	MakeWord	(0X8048C26);
	MakeDword	(0X8048C28);
	MakeArray	(0X8048C28,	0X2);
	MakeCode	(0X8048C30);
	MakeName	(0X8048C30,	".bind");
	MakeWord	(0X8048C36);
	MakeDword	(0X8048C38);
	MakeArray	(0X8048C38,	0X2);
	MakeCode	(0X8048C40);
	MakeName	(0X8048C40,	".getgid");
	MakeWord	(0X8048C46);
	MakeDword	(0X8048C48);
	MakeArray	(0X8048C48,	0X2);
	MakeCode	(0X8048C50);
	MakeName	(0X8048C50,	".memset");
	MakeWord	(0X8048C56);
	MakeDword	(0X8048C58);
	MakeArray	(0X8048C58,	0X2);
	MakeCode	(0X8048C60);
	MakeName	(0X8048C60,	".snprintf");
	MakeWord	(0X8048C66);
	MakeDword	(0X8048C68);
	MakeArray	(0X8048C68,	0X2);
	MakeCode	(0X8048C70);
	MakeName	(0X8048C70,	".pipe");
	MakeWord	(0X8048C76);
	MakeDword	(0X8048C78);
	MakeArray	(0X8048C78,	0X2);
	MakeCode	(0X8048C80);
	MakeName	(0X8048C80,	".rand");
	MakeWord	(0X8048C86);
	MakeDword	(0X8048C88);
	MakeArray	(0X8048C88,	0X2);
	MakeCode	(0X8048C90);
	MakeName	(0X8048C90,	".sendto");
	MakeWord	(0X8048C96);
	MakeDword	(0X8048C98);
	MakeArray	(0X8048C98,	0X2);
	MakeCode	(0X8048CA0);
	MakeName	(0X8048CA0,	".setegid");
	MakeWord	(0X8048CA6);
	MakeDword	(0X8048CA8);
	MakeArray	(0X8048CA8,	0X2);
	MakeCode	(0X8048CB0);
	MakeName	(0X8048CB0,	".fork");
	MakeWord	(0X8048CB6);
	MakeDword	(0X8048CB8);
	MakeArray	(0X8048CB8,	0X2);
	MakeCode	(0X8048CC0);
	MakeName	(0X8048CC0,	".htonl");
	MakeWord	(0X8048CC6);
	MakeDword	(0X8048CC8);
	MakeArray	(0X8048CC8,	0X2);
	MakeCode	(0X8048CD0);
	MakeName	(0X8048CD0,	".ntohs");
	MakeWord	(0X8048CD6);
	MakeDword	(0X8048CD8);
	MakeArray	(0X8048CD8,	0X2);
	MakeCode	(0X8048CE0);
	MakeName	(0X8048CE0,	".setuid");
	MakeWord	(0X8048CE6);
	MakeDword	(0X8048CE8);
	MakeArray	(0X8048CE8,	0X2);
	MakeCode	(0X8048CF0);
	MakeName	(0X8048CF0,	".sprintf");
	MakeWord	(0X8048CF6);
	MakeDword	(0X8048CF8);
	MakeArray	(0X8048CF8,	0X2);
	MakeCode	(0X8048D00);
	MakeName	(0X8048D00,	".socket");
	MakeWord	(0X8048D06);
	MakeDword	(0X8048D08);
	MakeArray	(0X8048D08,	0X2);
	MakeCode	(0X8048D10);
	MakeName	(0X8048D10,	".setresgid");
	MakeWord	(0X8048D16);
	MakeDword	(0X8048D18);
	MakeArray	(0X8048D18,	0X2);
	MakeCode	(0X8048D20);
	MakeName	(0X8048D20,	".inet_addr");
	MakeWord	(0X8048D26);
	MakeDword	(0X8048D28);
	MakeArray	(0X8048D28,	0X2);
	MakeCode	(0X8048D30);
	MakeName	(0X8048D30,	".strncmp");
	MakeWord	(0X8048D36);
	MakeDword	(0X8048D38);
	MakeArray	(0X8048D38,	0X2);
	MakeCode	(0X8048D40);
	MakeName	(0X8048D40,	".close");
	MakeWord	(0X8048D46);
	MakeDword	(0X8048D48);
	MakeArray	(0X8048D48,	0X2);
	MakeCode	(0X8048D50);
	MakeName	(0X8048D50,	".calloc");
	MakeWord	(0X8048D56);
	MakeDword	(0X8048D58);
	MakeArray	(0X8048D58,	0X2);
	MakeCode	(0X8048D60);
	MakeName	(0X8048D60,	"start");
	MakeCode	(x=0X8048D65);
	OpHex		(x,	1);
	MakeCode	(x=0X8048D6B);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(x=0X8048D70);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(x=0X8048D77);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeArray	(0X8048D82,	0XE);
	MakeCode	(0X8048D90);
	MakeCode	(x=0X8048D94);
	OpHex		(x,	1);
	MakeCode	(x=0X8048DA5);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X8048DAA);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X8048DB0);
	OpHex		(x,	1);
	MakeCode	(x=0X8048DC8);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(x=0X8048DDF);
	OpHex		(x,	1);
	MakeArray	(0X8048DE5,	0XB);
	MakeCode	(0X8048DF0);
	MakeCode	(x=0X8048DF3);
	OpHex		(x,	1);
	MakeCode	(x=0X8048E08);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(0X8048E14);
	MakeName	(0X8048E14,	"drop_privs");
	MakeCode	(x=0X8048E17);
	OpHex		(x,	1);
	MakeCode	(x=0X8048E1A);
	OpStkvar	(x,	0);
	MakeCode	(x=0X8048E21);
	OpStkvar	(x,	0);
	MakeComm	(0X8048E27,	"status");
	MakeCode	(x=0X8048E33);
	OpStkvar	(x,	1);
	MakeComm	(0X8048E36,	"name");
	MakeCode	(x=0X8048E3E);
	OpStkvar	(x,	0);
	MakeCode	(x=0X8048E41);
	OpStkvar	(x,	0);
	MakeComm	(0X8048E47,	"status");
	MakeCode	(x=0X8048E53);
	OpStkvar	(x,	1);
	MakeComm	(0X8048E62,	"status");
	MakeCode	(0X8048E6E);
	MakeCode	(0X8048E75);
	MakeName	(0X8048E75,	"drop_privs_user");
	MakeCode	(x=0X8048E78);
	OpHex		(x,	1);
	MakeCode	(x=0X8048E7B);
	OpStkvar	(x,	0);
	MakeCode	(x=0X8048E82);
	OpStkvar	(x,	0);
	MakeCode	(x=0X8048E89);
	OpStkvar	(x,	0);
	MakeCode	(0X8048E99);
	MakeCode	(x=0X8048E9E);
	OpStkvar	(x,	0);
	MakeCode	(x=0X8048EA6);
	OpStkvar	(x,	0);
	MakeCode	(x=0X8048EA9);
	OpStkvar	(x,	1);
	MakeCode	(x=0X8048EAF);
	OpStkvar	(x,	1);
	MakeComm	(0X8048EB4,	"group");
	MakeComm	(0X8048EB8,	"char *");
	MakeCode	(x=0X8048ECE);
	OpStkvar	(x,	1);
	MakeCode	(x=0X8048ED4);
	OpStkvar	(x,	1);
	MakeCode	(x=0X8048EDA);
	OpStkvar	(x,	1);
	MakeCode	(x=0X8048EF4);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X8048F0A);
	OpStkvar	(x,	1);
	MakeCode	(x=0X8048F10);
	OpStkvar	(x,	1);
	MakeCode	(x=0X8048F16);
	OpStkvar	(x,	1);
	MakeCode	(x=0X8048F30);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X8048F46);
	OpStkvar	(x,	1);
	MakeCode	(x=0X8048F4C);
	OpStkvar	(x,	1);
	MakeCode	(x=0X8048F51);
	OpStkvar	(x,	1);
	MakeComm	(0X8048F54,	"gid");
	MakeCode	(x=0X8048F61);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X8048F77);
	OpStkvar	(x,	1);
	MakeComm	(0X8048F7A,	"gid");
	MakeCode	(x=0X8048F87);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X8048F9D);
	OpStkvar	(x,	1);
	MakeCode	(x=0X8048FA3);
	OpStkvar	(x,	1);
	MakeCode	(x=0X8048FA8);
	OpStkvar	(x,	1);
	MakeComm	(0X8048FAB,	"uid");
	MakeCode	(x=0X8048FB8);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X8048FCE);
	OpStkvar	(x,	1);
	MakeComm	(0X8048FD1,	"uid");
	MakeCode	(x=0X8048FDE);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(0X8048FF4);
	MakeCode	(x=0X8048FFB);
	OpStkvar	(x,	1);
	MakeCode	(0X804900C);
	MakeCode	(x=0X8049013);
	OpStkvar	(x,	1);
	MakeCode	(0X8049024);
	MakeCode	(x=0X804902B);
	OpStkvar	(x,	1);
	MakeCode	(0X804903C);
	MakeCode	(x=0X8049043);
	OpStkvar	(x,	1);
	MakeCode	(x=0X8049054);
	OpStkvar	(x,	1);
	MakeComm	(0X804905A,	"path");
	MakeCode	(x=0X8049066);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(0X8049079);
	MakeCode	(0X8049080);
	MakeName	(0X8049080,	"lookup_error_code");
	MakeCode	(x=0X8049083);
	OpStkvar	(x,	1);
	MakeCode	(x=0X8049086);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(0X804908F);
	MakeCode	(x=0X8049092);
	OpHex		(x,	1);
	MakeCode	(x=0X8049095);
	OpStkvar	(x,	0);
	MakeCode	(x=0X804909B);
	OpStkvar	(x,	0);
	MakeCode	(x=0X80490A2);
	OpStkvar	(x,	0);
	MakeCode	(x=0X80490A9);
	OpStkvar	(x,	1);
	MakeCode	(x=0X80490AF);
	OpStkvar	(x,	0);
	MakeCode	(x=0X80490B4);
	OpStkvar	(x,	1);
	MakeCode	(x=0X80490BD);
	OpStkvar	(x,	0);
	MakeCode	(x=0X80490C0);
	OpStkvar	(x,	0);
	MakeCode	(x=0X80490C4);
	OpStkvar	(x,	0);
	MakeCode	(x=0X80490CB);
	OpStkvar	(x,	0);
	MakeCode	(x=0X80490D3);
	OpStkvar	(x,	0);
	MakeCode	(x=0X80490DA);
	OpStkvar	(x,	1);
	MakeCode	(x=0X80490E0);
	OpStkvar	(x,	0);
	MakeCode	(x=0X80490E5);
	OpStkvar	(x,	1);
	MakeCode	(x=0X80490EE);
	OpStkvar	(x,	0);
	MakeCode	(x=0X80490F1);
	OpStkvar	(x,	0);
	MakeCode	(x=0X80490F5);
	OpStkvar	(x,	0);
	MakeCode	(x=0X80490FC);
	OpStkvar	(x,	0);
	MakeCode	(x=0X8049104);
	OpStkvar	(x,	1);
	MakeComm	(0X804910A,	"hostlong");
	MakeCode	(x=0X8049112);
	OpStkvar	(x,	0);
	MakeCode	(x=0X8049115);
	OpStkvar	(x,	1);
	MakeCode	(x=0X8049118);
	OpStkvar	(x,	0);
	MakeCode	(x=0X804911B);
	OpStkvar	(x,	1);
	MakeCode	(x=0X8049124);
	OpStkvar	(x,	0);
	MakeCode	(x=0X8049127);
	OpStkvar	(x,	0);
	MakeCode	(x=0X804912B);
	OpStkvar	(x,	1);
	MakeCode	(x=0X8049134);
	OpStkvar	(x,	0);
	MakeCode	(x=0X8049137);
	OpStkvar	(x,	0);
	MakeCode	(x=0X804913B);
	OpStkvar	(x,	0);
	MakeCode	(x=0X8049142);
	OpStkvar	(x,	1);
	MakeComm	(0X804914C,	"hostshort");
	MakeCode	(x=0X8049157);
	OpStkvar	(x,	0);
	MakeCode	(x=0X804915A);
	OpStkvar	(x,	1);
	MakeComm	(0X8049164,	"hostshort");
	MakeCode	(x=0X804916F);
	OpStkvar	(x,	0);
	MakeCode	(x=0X8049172);
	OpStkvar	(x,	1);
	MakeComm	(0X804917B,	"hostshort");
	MakeCode	(x=0X8049186);
	OpStkvar	(x,	0);
	MakeCode	(x=0X8049189);
	OpStkvar	(x,	1);
	MakeCode	(x=0X804918C);
	OpStkvar	(x,	0);
	MakeCode	(x=0X804918F);
	OpStkvar	(x,	1);
	MakeCode	(x=0X8049198);
	OpStkvar	(x,	0);
	MakeCode	(x=0X804919B);
	OpStkvar	(x,	0);
	MakeCode	(x=0X804919F);
	OpStkvar	(x,	1);
	MakeCode	(x=0X80491A2);
	OpStkvar	(x,	0);
	MakeCode	(x=0X80491A7);
	OpStkvar	(x,	1);
	MakeCode	(x=0X80491B0);
	OpStkvar	(x,	0);
	MakeCode	(x=0X80491B3);
	OpStkvar	(x,	0);
	MakeCode	(x=0X80491B7);
	OpStkvar	(x,	0);
	MakeCode	(x=0X80491BB);
	OpStkvar	(x,	0);
	MakeCode	(x=0X80491C1);
	OpStkvar	(x,	0);
	MakeCode	(x=0X80491C7);
	OpStkvar	(x,	1);
	MakeCode	(x=0X80491CA);
	OpStkvar	(x,	1);
	MakeCode	(x=0X80491D2);
	OpStkvar	(x,	1);
	MakeCode	(x=0X80491D9);
	OpStkvar	(x,	0);
	MakeCode	(x=0X80491DC);
	OpStkvar	(x,	1);
	MakeCode	(x=0X80491E1);
	OpHex		(x,	1);
	MakeCode	(x=0X80491E4);
	OpStkvar	(x,	1);
	MakeCode	(x=0X80491E7);
	OpHex		(x,	1);
	MakeCode	(x=0X80491EE);
	OpStkvar	(x,	0);
	MakeCode	(x=0X80491F1);
	OpStkvar	(x,	1);
	MakeCode	(x=0X80491F4);
	OpHex		(x,	1);
	MakeCode	(x=0X80491F7);
	OpStkvar	(x,	0);
	MakeCode	(x=0X80491FA);
	OpStkvar	(x,	1);
	MakeCode	(x=0X80491FF);
	OpStkvar	(x,	0);
	MakeCode	(x=0X8049203);
	OpStkvar	(x,	1);
	MakeCode	(0X8049209);
	MakeName	(0X8049209,	"open_raw_socket_maybe");
	MakeCode	(x=0X804920D);
	OpHex		(x,	1);
	MakeCode	(x=0X8049210);
	OpStkvar	(x,	1);
	MakeCode	(x=0X8049213);
	OpStkvar	(x,	0);
	MakeCode	(x=0X8049216);
	OpStkvar	(x,	1);
	MakeCode	(x=0X8049219);
	OpStkvar	(x,	0);
	MakeCode	(x=0X8049222);
	OpStkvar	(x,	0);
	MakeCode	(x=0X8049227);
	OpStkvar	(x,	0);
	MakeComm	(0X8049231,	"hostshort");
	MakeComm	(0X8049240,	"protocol");
	MakeComm	(0X8049244,	"type");
	MakeComm	(0X804924C,	"domain");
	MakeCode	(x=0X8049258);
	OpStkvar	(x,	0);
	MakeCode	(x=0X804925B);
	OpStkvar	(x,	0);
	MakeComm	(0X804927D,	"format");
	MakeComm	(0X8049281,	"stream");
	MakeComm	(0X8049289,	"status");
	MakeCode	(x=0X8049295);
	OpStkvar	(x,	1);
	MakeCode	(x=0X80492A6);
	OpHex		(x,	1);
	MakeCode	(x=0X80492BA);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X80492BF);
	OpStkvar	(x,	1);
	MakeComm	(0X80492C6,	"format");
	MakeComm	(0X80492CA,	"maxlen");
	MakeCode	(x=0X80492D2);
	OpStkvar	(x,	1);
	MakeComm	(0X80492D5,	"s");
	MakeCode	(x=0X80492DD);
	OpStkvar	(x,	1);
	MakeComm	(0X80492E4,	"request");
	MakeCode	(x=0X80492EC);
	OpStkvar	(x,	1);
	MakeComm	(0X80492EF,	"fd");
	MakeComm	(0X8049317,	"format");
	MakeComm	(0X804931B,	"stream");
	MakeComm	(0X8049323,	"status");
	MakeCode	(x=0X804932F);
	OpStkvar	(x,	1);
	MakeComm	(0X8049332,	"fd");
	MakeCode	(x=0X8049362);
	OpStkvar	(x,	1);
	MakeCode	(x=0X804936B);
	OpStkvar	(x,	0);
	MakeCode	(x=0X8049370);
	OpStkvar	(x,	1);
	MakeComm	(0X8049373,	"cp");
	MakeCode	(x=0X804937B);
	OpStkvar	(x,	0);
	MakeCode	(x=0X804939A);
	OpStkvar	(x,	1);
	MakeCode	(x=0X80493A2);
	OpStkvar	(x,	1);
	MakeCode	(x=0X80493A5);
	OpHex		(x,	1);
	MakeCode	(x=0X80493AA);
	OpHex		(x,	1);
	MakeCode	(x=0X80493B2);
	OpStkvar	(x,	1);
	MakeCode	(x=0X80493B5);
	OpHex		(x,	1);
	MakeCode	(x=0X80493BA);
	OpHex		(x,	1);
	MakeCode	(x=0X80493C2);
	OpStkvar	(x,	1);
	MakeCode	(x=0X80493C5);
	OpHex		(x,	1);
	MakeCode	(x=0X80493E9);
	OpStkvar	(x,	1);
	MakeCode	(x=0X80493F3);
	OpStkvar	(x,	1);
	MakeCode	(x=0X80493F6);
	OpHex		(x,	1);
	MakeCode	(x=0X80493FB);
	OpHex		(x,	1);
	MakeCode	(x=0X8049405);
	OpStkvar	(x,	1);
	MakeCode	(x=0X8049408);
	OpHex		(x,	1);
	MakeCode	(x=0X804940D);
	OpHex		(x,	1);
	MakeCode	(x=0X8049417);
	OpStkvar	(x,	1);
	MakeCode	(x=0X804941A);
	OpHex		(x,	1);
	MakeCode	(x=0X8049424);
	OpStkvar	(x,	1);
	MakeCode	(x=0X8049435);
	OpHex		(x,	1);
	MakeCode	(0X804943B);
	MakeName	(0X804943B,	"open_socket");
	MakeCode	(x=0X804943E);
	OpHex		(x,	1);
	MakeCode	(x=0X8049447);
	OpStkvar	(x,	0);
	MakeComm	(0X804944C,	"protocol");
	MakeComm	(0X8049454,	"type");
	MakeComm	(0X804945C,	"domain");
	MakeCode	(x=0X804947D);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeComm	(0X8049482,	"s");
	MakeComm	(0X8049486,	"n");
	MakeComm	(0X804948E,	"size");
	MakeComm	(0X8049496,	"ptr");
	MakeCode	(x=0X80494A5);
	OpStkvar	(x,	1);
	MakeCode	(x=0X80494C3);
	OpStkvar	(x,	0);
	MakeComm	(0X80494C9,	"hostlong");
	MakeCode	(x=0X80494D5);
	OpStkvar	(x,	0);
	MakeComm	(0X80494D8,	"hostshort");
	MakeCode	(x=0X80494E4);
	OpStkvar	(x,	0);
	MakeComm	(0X80494ED,	"len");
	MakeCode	(x=0X80494F5);
	OpStkvar	(x,	1);
	MakeComm	(0X80494F8,	"addr");
	MakeComm	(0X80494FC,	"fd");
	MakeComm	(0X804950D,	"fd");
	MakeCode	(0X804951C);
	MakeCode	(x=0X8049521);
	OpStkvar	(x,	1);
	MakeCode	(0X8049532);
	MakeCode	(0X8049534);
	MakeName	(0X8049534,	"lookup_ip_fragment_state_table");
	MakeCode	(x=0X8049537);
	OpHex		(x,	1);
	MakeCode	(x=0X804953A);
	OpStkvar	(x,	1);
	MakeCode	(x=0X804953D);
	OpStkvar	(x,	0);
	MakeCode	(x=0X8049540);
	OpStkvar	(x,	1);
	MakeCode	(x=0X8049546);
	OpStkvar	(x,	0);
	MakeCode	(x=0X804954E);
	OpStkvar	(x,	0);
	MakeCode	(x=0X8049553);
	OpStkvar	(x,	1);
	MakeComm	(0X8049559,	"netlong");
	MakeCode	(x=0X8049561);
	OpStkvar	(x,	1);
	MakeCode	(x=0X804956A);
	OpStkvar	(x,	1);
	MakeCode	(x=0X8049570);
	OpStkvar	(x,	1);
	MakeComm	(0X8049576,	"n");
	MakeComm	(0X804957E,	"s2");
	MakeComm	(0X8049582,	"s1");
	MakeCode	(x=0X804958E);
	OpStkvar	(x,	1);
	MakeCode	(x=0X8049594);
	OpStkvar	(x,	1);
	MakeComm	(0X804959A,	"n");
	MakeComm	(0X80495A2,	"s2");
	MakeComm	(0X80495A6,	"s1");
	MakeCode	(x=0X80495B2);
	OpStkvar	(x,	1);
	MakeCode	(x=0X80495B7);
	OpStkvar	(x,	1);
	MakeCode	(x=0X80495BD);
	OpStkvar	(x,	0);
	MakeCode	(x=0X80495C0);
	OpStkvar	(x,	0);
	MakeCode	(0X80495CD);
	MakeName	(0X80495CD,	"check_for_percent_n");
	MakeCode	(x=0X80495D0);
	OpHex		(x,	1);
	MakeCode	(x=0X80495D3);
	OpStkvar	(x,	1);
	MakeCode	(x=0X80495D6);
	OpStkvar	(x,	0);
	MakeCode	(x=0X80495DF);
	OpStkvar	(x,	0);
	MakeCode	(x=0X80495E4);
	OpStkvar	(x,	0);
	MakeCode	(x=0X80495EB);
	OpStkvar	(x,	0);
	MakeCode	(x=0X80495F2);
	OpStkvar	(x,	0);
	MakeCode	(x=0X80495F9);
	OpStkvar	(x,	0);
	MakeCode	(x=0X8049600);
	OpStkvar	(x,	0);
	MakeCode	(x=0X8049607);
	OpStkvar	(x,	0);
	MakeCode	(x=0X804960B);
	OpStkvar	(x,	0);
	MakeCode	(x=0X8049614);
	OpStkvar	(x,	1);
	MakeCode	(x=0X8049617);
	OpStkvar	(x,	1);
	MakeCode	(x=0X8049621);
	OpStkvar	(x,	0);
	MakeCode	(x=0X804962A);
	OpStkvar	(x,	0);
	MakeCode	(x=0X8049630);
	OpStkvar	(x,	1);
	MakeCode	(x=0X8049633);
	OpStkvar	(x,	1);
	MakeCode	(x=0X804963D);
	OpStkvar	(x,	1);
	MakeCode	(x=0X8049640);
	OpStkvar	(x,	1);
	MakeCode	(x=0X8049646);
	OpStkvar	(x,	0);
	MakeCode	(x=0X804964F);
	OpStkvar	(x,	0);
	MakeCode	(x=0X8049655);
	OpStkvar	(x,	1);
	MakeCode	(x=0X8049658);
	OpStkvar	(x,	1);
	MakeComm	(0X8049661,	"c");
	MakeCode	(x=0X8049665);
	OpStkvar	(x,	1);
	MakeComm	(0X8049668,	"s");
	MakeCode	(x=0X8049674);
	OpStkvar	(x,	0);
	MakeCode	(x=0X804967C);
	OpStkvar	(x,	0);
	MakeCode	(x=0X8049680);
	OpStkvar	(x,	1);
	MakeCode	(x=0X8049683);
	OpStkvar	(x,	1);
	MakeCode	(x=0X8049688);
	OpStkvar	(x,	1);
	MakeCode	(0X8049699);
	MakeCode	(0X804969B);
	MakeName	(0X804969B,	"hande_fragment");
	MakeCode	(x=0X804969F);
	OpHex		(x,	1);
	MakeCode	(x=0X80496A2);
	OpStkvar	(x,	1);
	MakeCode	(x=0X80496A5);
	OpStkvar	(x,	0);
	MakeCode	(x=0X80496A8);
	OpStkvar	(x,	0);
	MakeComm	(0X80496CE,	"format");
	MakeComm	(0X80496D2,	"stream");
	MakeCode	(x=0X80496DF);
	OpStkvar	(x,	1);
	MakeCode	(x=0X80496EA);
	OpStkvar	(x,	0);
	MakeCode	(x=0X80496ED);
	OpStkvar	(x,	0);
	MakeCode	(x=0X80496F7);
	OpStkvar	(x,	1);
	MakeCode	(x=0X80496FD);
	OpStkvar	(x,	0);
	MakeCode	(x=0X8049700);
	OpStkvar	(x,	1);
	MakeCode	(x=0X804970A);
	OpHex		(x,	1);
	MakeComm	(0X804970F,	"netshort");
	MakeCode	(x=0X8049717);
	OpStkvar	(x,	0);
	MakeCode	(x=0X804971B);
	OpStkvar	(x,	1);
	MakeCode	(x=0X804971F);
	OpStkvar	(x,	1);
	MakeComm	(0X8049729,	"netshort");
	MakeCode	(x=0X8049744);
	OpStkvar	(x,	1);
	MakeCode	(x=0X804974E);
	OpHex		(x,	1);
	MakeComm	(0X8049753,	"netshort");
	MakeCode	(x=0X804975B);
	OpStkvar	(x,	0);
	MakeCode	(x=0X804975F);
	OpStkvar	(x,	1);
	MakeCode	(x=0X8049766);
	OpStkvar	(x,	0);
	MakeCode	(x=0X804976A);
	OpStkvar	(x,	1);
	MakeCode	(x=0X8049770);
	OpStkvar	(x,	0);
	MakeCode	(x=0X8049773);
	OpStkvar	(x,	1);
	MakeCode	(x=0X8049777);
	OpStkvar	(x,	1);
	MakeComm	(0X8049781,	"netshort");
	MakeCode	(x=0X8049791);
	OpStkvar	(x,	1);
	MakeCode	(x=0X80497A6);
	OpStkvar	(x,	1);
	MakeComm	(0X80497B0,	"netshort");
	MakeCode	(x=0X80497B8);
	OpStkvar	(x,	1);
	MakeCode	(x=0X80497BF);
	OpStkvar	(x,	0);
	MakeCode	(x=0X80497C3);
	OpStkvar	(x,	1);
	MakeComm	(0X80497C7,	"size");
	MakeComm	(0X80497CB,	"nmemb");
	MakeCode	(x=0X80497D7);
	OpStkvar	(x,	0);
	MakeCode	(x=0X80497DA);
	OpStkvar	(x,	0);
	MakeCode	(x=0X80497E4);
	OpStkvar	(x,	1);
	MakeCode	(x=0X80497EE);
	OpStkvar	(x,	1);
	MakeCode	(x=0X80497F6);
	OpStkvar	(x,	1);
	MakeComm	(0X80497F9,	"n");
	MakeComm	(0X80497FD,	"src");
	MakeComm	(0X8049801,	"dest");
	MakeCode	(x=0X8049809);
	OpStkvar	(x,	1);
	MakeComm	(0X804980F,	"ptr");
	MakeCode	(x=0X8049817);
	OpStkvar	(x,	1);
	MakeCode	(x=0X804981A);
	OpStkvar	(x,	1);
	MakeCode	(x=0X8049820);
	OpStkvar	(x,	1);
	MakeCode	(x=0X8049823);
	OpStkvar	(x,	1);
	MakeCode	(x=0X804982B);
	OpStkvar	(x,	1);
	MakeCode	(x=0X8049831);
	OpStkvar	(x,	1);
	MakeComm	(0X804983B,	"hostshort");
	MakeCode	(x=0X8049847);
	OpStkvar	(x,	1);
	MakeComm	(0X8049851,	"netshort");
	MakeCode	(x=0X804985F);
	OpStkvar	(x,	1);
	MakeComm	(0X8049869,	"netshort");
	MakeCode	(x=0X8049877);
	OpStkvar	(x,	1);
	MakeCode	(x=0X8049889);
	OpStkvar	(x,	1);
	MakeComm	(0X8049893,	"netshort");
	MakeCode	(x=0X80498A3);
	OpStkvar	(x,	1);
	MakeCode	(x=0X80498A9);
	OpStkvar	(x,	1);
	MakeCode	(x=0X80498B0);
	OpStkvar	(x,	1);
	MakeComm	(0X80498B3,	"n");
	MakeComm	(0X80498B7,	"src");
	MakeComm	(0X80498BB,	"dest");
	MakeCode	(x=0X80498C3);
	OpStkvar	(x,	0);
	MakeComm	(0X80498CA,	"timer");
	MakeCode	(x=0X80498D6);
	OpStkvar	(x,	1);
	MakeCode	(x=0X80498E1);
	OpStkvar	(x,	1);
	MakeCode	(x=0X80498E8);
	OpStkvar	(x,	1);
	MakeCode	(x=0X80498F3);
	OpStkvar	(x,	1);
	MakeComm	(0X80498F6,	"ptr");
	MakeCode	(x=0X80498FE);
	OpStkvar	(x,	1);
	MakeCode	(x=0X804990E);
	OpStkvar	(x,	1);
	MakeCode	(x=0X8049914);
	OpStkvar	(x,	0);
	MakeCode	(x=0X8049917);
	OpStkvar	(x,	1);
	MakeComm	(0X8049941,	"format");
	MakeComm	(0X8049945,	"stream");
	MakeCode	(x=0X8049952);
	OpStkvar	(x,	1);
	MakeCode	(x=0X804995C);
	OpHex		(x,	1);
	MakeComm	(0X8049961,	"netshort");
	MakeCode	(x=0X8049969);
	OpStkvar	(x,	0);
	MakeCode	(x=0X804996D);
	OpStkvar	(x,	1);
	MakeCode	(x=0X8049977);
	OpHex		(x,	1);
	MakeComm	(0X804997C,	"netshort");
	MakeCode	(x=0X8049984);
	OpStkvar	(x,	0);
	MakeComm	(0X8049988,	"size");
	MakeComm	(0X8049990,	"nmemb");
	MakeCode	(x=0X804999C);
	OpStkvar	(x,	0);
	MakeCode	(x=0X804999F);
	OpStkvar	(x,	0);
	MakeCode	(x=0X80499A9);
	OpStkvar	(x,	1);
	MakeComm	(0X80499B3,	"netshort");
	MakeCode	(x=0X80499BB);
	OpStkvar	(x,	1);
	MakeCode	(x=0X80499C2);
	OpStkvar	(x,	0);
	MakeCode	(x=0X80499C6);
	OpStkvar	(x,	1);
	MakeComm	(0X80499CA,	"size");
	MakeComm	(0X80499CE,	"nmemb");
	MakeCode	(x=0X80499DA);
	OpStkvar	(x,	0);
	MakeCode	(x=0X80499DD);
	OpStkvar	(x,	0);
	MakeCode	(x=0X80499E7);
	OpStkvar	(x,	1);
	MakeComm	(0X80499ED,	"netlong");
	MakeCode	(x=0X80499F5);
	OpStkvar	(x,	1);
	MakeCode	(x=0X80499FA);
	OpStkvar	(x,	1);
	MakeCode	(x=0X8049A02);
	OpStkvar	(x,	1);
	MakeCode	(x=0X8049A1E);
	OpStkvar	(x,	1);
	MakeCode	(x=0X8049A26);
	OpStkvar	(x,	1);
	MakeCode	(x=0X8049A42);
	OpStkvar	(x,	1);
	MakeCode	(x=0X8049A45);
	OpStkvar	(x,	1);
	MakeCode	(x=0X8049A4B);
	OpStkvar	(x,	1);
	MakeCode	(x=0X8049A4E);
	OpStkvar	(x,	1);
	MakeCode	(x=0X8049A8B);
	OpStkvar	(x,	1);
	MakeComm	(0X8049A95,	"netshort");
	MakeCode	(x=0X8049AA3);
	OpStkvar	(x,	1);
	MakeComm	(0X8049AAD,	"netshort");
	MakeCode	(x=0X8049ABB);
	OpStkvar	(x,	1);
	MakeCode	(x=0X8049ACD);
	OpStkvar	(x,	1);
	MakeComm	(0X8049AD7,	"netshort");
	MakeCode	(x=0X8049AE7);
	OpStkvar	(x,	1);
	MakeCode	(x=0X8049AED);
	OpStkvar	(x,	1);
	MakeCode	(x=0X8049AF4);
	OpStkvar	(x,	1);
	MakeComm	(0X8049AF7,	"n");
	MakeComm	(0X8049AFB,	"src");
	MakeComm	(0X8049AFF,	"dest");
	MakeCode	(x=0X8049B07);
	OpStkvar	(x,	1);
	MakeCode	(x=0X8049B0D);
	OpStkvar	(x,	1);
	MakeComm	(0X8049B17,	"hostshort");
	MakeCode	(x=0X8049B23);
	OpStkvar	(x,	1);
	MakeCode	(x=0X8049B26);
	OpStkvar	(x,	1);
	MakeComm	(0X8049B2E,	"timer");
	MakeCode	(x=0X8049B3A);
	OpStkvar	(x,	1);
	MakeCode	(x=0X8049B40);
	OpStkvar	(x,	1);
	MakeCode	(x=0X8049B4B);
	OpStkvar	(x,	0);
	MakeCode	(x=0X8049B52);
	OpStkvar	(x,	1);
	MakeCode	(x=0X8049B59);
	OpStkvar	(x,	1);
	MakeCode	(x=0X8049B64);
	OpStkvar	(x,	1);
	MakeComm	(0X8049B67,	"ptr");
	MakeCode	(x=0X8049B6F);
	OpStkvar	(x,	1);
	MakeCode	(0X8049B7C);
	MakeCode	(0X8049B7F);
	MakeCode	(0X8049B82);
	MakeCode	(0X8049B85);
	MakeCode	(0X8049B88);
	MakeCode	(0X8049B8B);
	MakeCode	(0X8049B8E);
	MakeCode	(x=0X8049B8F);
	OpHex		(x,	1);
	MakeCode	(0X8049B95);
	MakeName	(0X8049B95,	"lookup_packet_in_state_table");
	MakeCode	(x=0X8049B98);
	OpHex		(x,	1);
	MakeCode	(x=0X8049B9B);
	OpStkvar	(x,	1);
	MakeCode	(x=0X8049B9E);
	OpStkvar	(x,	1);
	MakeCode	(x=0X8049BA1);
	OpStkvar	(x,	0);
	MakeCode	(x=0X8049BA5);
	OpStkvar	(x,	0);
	MakeCode	(x=0X8049BAE);
	OpStkvar	(x,	0);
	MakeCode	(x=0X8049BB6);
	OpStkvar	(x,	1);
	MakeComm	(0X8049BBC,	"n");
	MakeCode	(x=0X8049BC4);
	OpStkvar	(x,	1);
	MakeComm	(0X8049BC7,	"s2");
	MakeComm	(0X8049BCB,	"s1");
	MakeCode	(x=0X8049BD7);
	OpStkvar	(x,	1);
	MakeComm	(0X8049BDD,	"n");
	MakeCode	(x=0X8049BE5);
	OpStkvar	(x,	1);
	MakeComm	(0X8049BE8,	"s2");
	MakeComm	(0X8049BEC,	"s1");
	MakeCode	(x=0X8049BF8);
	OpStkvar	(x,	1);
	MakeComm	(0X8049BFE,	"n");
	MakeCode	(x=0X8049C06);
	OpStkvar	(x,	1);
	MakeComm	(0X8049C09,	"s2");
	MakeComm	(0X8049C0D,	"s1");
	MakeCode	(x=0X8049C19);
	OpStkvar	(x,	1);
	MakeCode	(x=0X8049C20);
	OpStkvar	(x,	1);
	MakeCode	(x=0X8049C26);
	OpStkvar	(x,	1);
	MakeCode	(x=0X8049C2D);
	OpStkvar	(x,	1);
	MakeCode	(x=0X8049C33);
	OpStkvar	(x,	1);
	MakeCode	(x=0X8049C38);
	OpStkvar	(x,	1);
	MakeCode	(x=0X8049C3E);
	OpStkvar	(x,	0);
	MakeCode	(x=0X8049C41);
	OpStkvar	(x,	0);
	MakeCode	(0X8049C52);
	MakeName	(0X8049C52,	"add_to_frag_state_table");
	MakeCode	(x=0X8049C55);
	OpHex		(x,	1);
	MakeCode	(x=0X8049C5D);
	OpStkvar	(x,	0);
	MakeCode	(x=0X8049C69);
	OpStkvar	(x,	1);
	MakeCode	(x=0X8049C71);
	OpStkvar	(x,	1);
	MakeCode	(x=0X8049C82);
	OpStkvar	(x,	1);
	MakeCode	(x=0X8049C85);
	OpStkvar	(x,	1);
	MakeCode	(x=0X8049C8B);
	OpStkvar	(x,	1);
	MakeCode	(0X8049C9A);
	MakeName	(0X8049C9A,	"remove_from_frag_state_table");
	MakeCode	(x=0X8049C9D);
	OpHex		(x,	1);
	MakeCode	(x=0X8049CA5);
	OpStkvar	(x,	0);
	MakeCode	(x=0X8049CAD);
	OpStkvar	(x,	0);
	MakeCode	(x=0X8049CB2);
	OpStkvar	(x,	1);
	MakeCode	(x=0X8049CB5);
	OpStkvar	(x,	1);
	MakeCode	(x=0X8049CBA);
	OpStkvar	(x,	1);
	MakeCode	(x=0X8049CBD);
	OpStkvar	(x,	1);
	MakeCode	(x=0X8049CC2);
	OpStkvar	(x,	1);
	MakeCode	(x=0X8049CCD);
	OpStkvar	(x,	1);
	MakeComm	(0X8049CD0,	"ptr");
	MakeCode	(x=0X8049CDF);
	OpStkvar	(x,	1);
	MakeCode	(x=0X8049CE5);
	OpStkvar	(x,	1);
	MakeCode	(x=0X8049CEB);
	OpStkvar	(x,	1);
	MakeComm	(0X8049CEE,	"ptr");
	MakeCode	(x=0X8049CFD);
	OpStkvar	(x,	1);
	MakeCode	(x=0X8049D00);
	OpStkvar	(x,	0);
	MakeCode	(x=0X8049D03);
	OpStkvar	(x,	1);
	MakeCode	(x=0X8049D09);
	OpStkvar	(x,	0);
	MakeCode	(x=0X8049D0C);
	OpStkvar	(x,	0);
	MakeCode	(0X8049D19);
	MakeCode	(x=0X8049D1C);
	OpHex		(x,	1);
	MakeCode	(0X8049D30);
	MakeCode	(0X8049D48);
	MakeName	(0X8049D48,	"add_to_state_table");
	MakeCode	(x=0X8049D4B);
	OpHex		(x,	1);
	MakeCode	(x=0X8049D53);
	OpStkvar	(x,	0);
	MakeCode	(x=0X8049D5F);
	OpStkvar	(x,	1);
	MakeCode	(x=0X8049D67);
	OpStkvar	(x,	1);
	MakeCode	(x=0X8049D78);
	OpStkvar	(x,	1);
	MakeCode	(x=0X8049D7B);
	OpStkvar	(x,	1);
	MakeCode	(x=0X8049D81);
	OpStkvar	(x,	1);
	MakeCode	(0X8049D90);
	MakeName	(0X8049D90,	"remove_from_state_table");
	MakeCode	(x=0X8049D93);
	OpHex		(x,	1);
	MakeCode	(x=0X8049D9B);
	OpStkvar	(x,	0);
	MakeCode	(x=0X8049DA3);
	OpStkvar	(x,	0);
	MakeCode	(x=0X8049DA8);
	OpStkvar	(x,	1);
	MakeCode	(x=0X8049DAB);
	OpStkvar	(x,	1);
	MakeCode	(x=0X8049DB0);
	OpStkvar	(x,	1);
	MakeCode	(x=0X8049DB3);
	OpStkvar	(x,	1);
	MakeCode	(x=0X8049DB8);
	OpStkvar	(x,	1);
	MakeCode	(x=0X8049DC3);
	OpStkvar	(x,	1);
	MakeComm	(0X8049DC6,	"ptr");
	MakeCode	(x=0X8049DD5);
	OpStkvar	(x,	1);
	MakeCode	(x=0X8049DDB);
	OpStkvar	(x,	1);
	MakeCode	(x=0X8049DE1);
	OpStkvar	(x,	1);
	MakeComm	(0X8049DE4,	"ptr");
	MakeCode	(x=0X8049DF3);
	OpStkvar	(x,	1);
	MakeCode	(x=0X8049DF6);
	OpStkvar	(x,	0);
	MakeCode	(x=0X8049DF9);
	OpStkvar	(x,	1);
	MakeCode	(x=0X8049DFF);
	OpStkvar	(x,	0);
	MakeCode	(x=0X8049E02);
	OpStkvar	(x,	0);
	MakeCode	(0X8049E0F);
	MakeName	(0X8049E0F,	"sendto_0");
	MakeCode	(x=0X8049E14);
	OpHex		(x,	1);
	MakeCode	(x=0X8049E1A);
	OpStkvar	(x,	1);
	MakeCode	(x=0X8049E1D);
	OpStkvar	(x,	0);
	MakeCode	(x=0X8049E23);
	OpStkvar	(x,	1);
	MakeCode	(x=0X8049E26);
	OpStkvar	(x,	0);
	MakeCode	(x=0X8049E32);
	OpStkvar	(x,	0);
	MakeCode	(x=0X8049E37);
	OpStkvar	(x,	0);
	MakeCode	(x=0X8049E4A);
	OpStkvar	(x,	1);
	MakeCode	(x=0X8049E5F);
	OpStkvar	(x,	1);
	MakeCode	(x=0X8049E72);
	OpStkvar	(x,	1);
	MakeCode	(x=0X8049E85);
	OpStkvar	(x,	1);
	MakeCode	(x=0X8049E9D);
	OpStkvar	(x,	0);
	MakeCode	(x=0X8049EA7);
	OpStkvar	(x,	0);
	MakeCode	(x=0X8049EB1);
	OpStkvar	(x,	0);
	MakeComm	(0X8049EC0,	"hostlong");
	MakeCode	(0X8049EC0);
	MakeCode	(x=0X8049ECC);
	OpStkvar	(x,	0);
	MakeCode	(x=0X8049ECF);
	OpStkvar	(x,	0);
	MakeCode	(x=0X8049ED3);
	OpStkvar	(x,	1);
	MakeCode	(x=0X8049EDC);
	OpStkvar	(x,	0);
	MakeCode	(x=0X8049EE2);
	OpStkvar	(x,	0);
	MakeCode	(x=0X8049EE8);
	OpStkvar	(x,	0);
	MakeCode	(x=0X8049EEE);
	OpStkvar	(x,	0);
	MakeCode	(x=0X8049EF1);
	OpStkvar	(x,	1);
	MakeCode	(x=0X8049EFA);
	OpStkvar	(x,	0);
	MakeCode	(x=0X8049F00);
	OpStkvar	(x,	0);
	MakeCode	(x=0X8049F06);
	OpStkvar	(x,	0);
	MakeCode	(x=0X8049F0C);
	OpStkvar	(x,	0);
	MakeCode	(x=0X8049F0F);
	OpStkvar	(x,	1);
	MakeCode	(x=0X8049F15);
	OpStkvar	(x,	1);
	MakeCode	(x=0X8049F29);
	OpStkvar	(x,	0);
	MakeCode	(x=0X8049F33);
	OpStkvar	(x,	0);
	MakeCode	(x=0X8049F40);
	OpStkvar	(x,	0);
	MakeCode	(x=0X8049F4A);
	OpStkvar	(x,	0);
	OpHex		(x,	1);
	MakeCode	(x=0X8049F51);
	OpStkvar	(x,	1);
	MakeComm	(0X8049F5D,	"hostshort");
	MakeCode	(x=0X8049F65);
	OpStkvar	(x,	0);
	MakeCode	(x=0X8049F69);
	OpStkvar	(x,	0);
	MakeCode	(x=0X8049F6D);
	OpStkvar	(x,	0);
	MakeCode	(x=0X8049F74);
	OpStkvar	(x,	0);
	MakeComm	(0X8049F7B,	"hostshort");
	MakeCode	(x=0X8049F87);
	OpStkvar	(x,	0);
	MakeCode	(x=0X8049F8E);
	OpStkvar	(x,	1);
	MakeComm	(0X8049F97,	"hostlong");
	MakeCode	(x=0X8049F9F);
	OpStkvar	(x,	0);
	MakeCode	(x=0X8049FA5);
	OpStkvar	(x,	1);
	MakeComm	(0X8049FB2,	"hostshort");
	MakeCode	(x=0X8049FBA);
	OpStkvar	(x,	0);
	MakeCode	(x=0X8049FC1);
	OpStkvar	(x,	1);
	MakeComm	(0X8049FCE,	"hostshort");
	MakeCode	(x=0X8049FD6);
	OpStkvar	(x,	0);
	MakeCode	(x=0X8049FDD);
	OpStkvar	(x,	1);
	MakeComm	(0X8049FE6,	"hostshort");
	MakeCode	(x=0X8049FEE);
	OpStkvar	(x,	0);
	MakeCode	(x=0X8049FF5);
	OpStkvar	(x,	1);
	MakeCode	(x=0X8049FFC);
	OpStkvar	(x,	1);
	MakeCode	(x=0X804A006);
	OpStkvar	(x,	1);
	MakeCode	(x=0X804A014);
	OpStkvar	(x,	0);
	MakeCode	(x=0X804A01B);
	OpStkvar	(x,	0);
	MakeCode	(x=0X804A025);
	OpStkvar	(x,	1);
	MakeCode	(x=0X804A02A);
	OpStkvar	(x,	0);
	MakeCode	(x=0X804A033);
	OpStkvar	(x,	0);
	MakeCode	(x=0X804A03C);
	OpStkvar	(x,	0);
	MakeCode	(x=0X804A045);
	OpStkvar	(x,	0);
	MakeCode	(x=0X804A04E);
	OpStkvar	(x,	0);
	MakeCode	(x=0X804A057);
	OpStkvar	(x,	0);
	MakeCode	(x=0X804A060);
	OpStkvar	(x,	0);
	MakeCode	(x=0X804A069);
	OpStkvar	(x,	0);
	MakeCode	(x=0X804A072);
	OpStkvar	(x,	0);
	MakeCode	(x=0X804A07B);
	OpStkvar	(x,	0);
	MakeCode	(x=0X804A081);
	OpStkvar	(x,	1);
	MakeCode	(x=0X804A08A);
	OpStkvar	(x,	1);
	MakeCode	(x=0X804A09A);
	OpStkvar	(x,	1);
	MakeCode	(x=0X804A0A3);
	OpStkvar	(x,	1);
	MakeCode	(x=0X804A0B3);
	OpStkvar	(x,	1);
	MakeCode	(x=0X804A0BB);
	OpStkvar	(x,	1);
	MakeCode	(x=0X804A0C1);
	OpStkvar	(x,	1);
	MakeCode	(x=0X804A0CA);
	OpStkvar	(x,	1);
	MakeComm	(0X804A0D0,	"n");
	MakeComm	(0X804A0D4,	"src");
	MakeComm	(0X804A0D8,	"dest");
	MakeCode	(x=0X804A0E0);
	OpStkvar	(x,	1);
	MakeCode	(x=0X804A0E9);
	OpStkvar	(x,	0);
	MakeCode	(x=0X804A0F4);
	OpStkvar	(x,	0);
	MakeCode	(x=0X804A0FE);
	OpStkvar	(x,	0);
	OpHex		(x,	1);
	MakeCode	(x=0X804A105);
	OpStkvar	(x,	1);
	MakeComm	(0X804A111,	"hostshort");
	MakeCode	(x=0X804A119);
	OpStkvar	(x,	0);
	MakeCode	(x=0X804A11D);
	OpStkvar	(x,	0);
	MakeCode	(x=0X804A121);
	OpStkvar	(x,	0);
	MakeCode	(x=0X804A128);
	OpStkvar	(x,	0);
	MakeCode	(x=0X804A12F);
	OpStkvar	(x,	1);
	MakeCode	(x=0X804A138);
	OpHex		(x,	1);
	MakeCode	(x=0X804A13B);
	OpHex		(x,	1);
	MakeCode	(x=0X804A13E);
	OpHex		(x,	1);
	MakeComm	(0X804A144,	"hostshort");
	MakeCode	(x=0X804A14C);
	OpStkvar	(x,	0);
	MakeCode	(x=0X804A153);
	OpStkvar	(x,	1);
	MakeComm	(0X804A15C,	"hostlong");
	MakeCode	(x=0X804A164);
	OpStkvar	(x,	0);
	MakeCode	(x=0X804A16A);
	OpStkvar	(x,	1);
	MakeCode	(x=0X804A16F);
	OpStkvar	(x,	0);
	MakeCode	(x=0X804A178);
	OpStkvar	(x,	0);
	MakeCode	(x=0X804A181);
	OpStkvar	(x,	0);
	MakeCode	(x=0X804A18A);
	OpStkvar	(x,	0);
	MakeCode	(x=0X804A193);
	OpStkvar	(x,	0);
	MakeCode	(x=0X804A19C);
	OpStkvar	(x,	0);
	MakeCode	(x=0X804A1A5);
	OpStkvar	(x,	0);
	MakeCode	(x=0X804A1AE);
	OpStkvar	(x,	0);
	MakeCode	(x=0X804A1B7);
	OpStkvar	(x,	0);
	MakeCode	(x=0X804A1C0);
	OpStkvar	(x,	0);
	MakeCode	(x=0X804A1C6);
	OpStkvar	(x,	1);
	MakeCode	(x=0X804A1CF);
	OpStkvar	(x,	1);
	MakeCode	(x=0X804A1DF);
	OpStkvar	(x,	1);
	MakeCode	(x=0X804A1E7);
	OpStkvar	(x,	1);
	MakeCode	(x=0X804A1ED);
	OpStkvar	(x,	1);
	MakeCode	(x=0X804A1F6);
	OpStkvar	(x,	1);
	MakeComm	(0X804A1FC,	"n");
	MakeComm	(0X804A200,	"src");
	MakeComm	(0X804A204,	"dest");
	MakeCode	(x=0X804A20C);
	OpStkvar	(x,	1);
	MakeCode	(x=0X804A215);
	OpStkvar	(x,	0);
	MakeCode	(x=0X804A220);
	OpStkvar	(x,	0);
	MakeCode	(x=0X804A22D);
	OpStkvar	(x,	1);
	MakeCode	(x=0X804A233);
	OpStkvar	(x,	1);
	MakeCode	(x=0X804A23C);
	OpStkvar	(x,	0);
	MakeCode	(x=0X804A242);
	OpStkvar	(x,	1);
	MakeComm	(0X804A24E,	"hostshort");
	MakeCode	(x=0X804A256);
	OpStkvar	(x,	0);
	MakeCode	(x=0X804A25A);
	OpStkvar	(x,	0);
	MakeCode	(x=0X804A25E);
	OpStkvar	(x,	0);
	MakeCode	(x=0X804A265);
	OpStkvar	(x,	0);
	MakeCode	(x=0X804A26C);
	OpStkvar	(x,	1);
	MakeCode	(x=0X804A275);
	OpHex		(x,	1);
	MakeCode	(x=0X804A278);
	OpHex		(x,	1);
	MakeComm	(0X804A27E,	"hostshort");
	MakeCode	(x=0X804A286);
	OpStkvar	(x,	0);
	MakeCode	(x=0X804A28D);
	OpStkvar	(x,	1);
	MakeCode	(x=0X804A29B);
	OpStkvar	(x,	1);
	MakeComm	(0X804A2A4,	"hostlong");
	MakeCode	(x=0X804A2AC);
	OpStkvar	(x,	0);
	MakeCode	(x=0X804A2B2);
	OpStkvar	(x,	1);
	MakeCode	(x=0X804A2B7);
	OpStkvar	(x,	0);
	MakeCode	(x=0X804A2C0);
	OpStkvar	(x,	0);
	MakeCode	(x=0X804A2C9);
	OpStkvar	(x,	0);
	MakeCode	(x=0X804A2D2);
	OpStkvar	(x,	0);
	MakeCode	(x=0X804A2DB);
	OpStkvar	(x,	0);
	MakeCode	(x=0X804A2E4);
	OpStkvar	(x,	0);
	MakeCode	(x=0X804A2ED);
	OpStkvar	(x,	0);
	MakeCode	(x=0X804A2F6);
	OpStkvar	(x,	0);
	MakeCode	(x=0X804A2FF);
	OpStkvar	(x,	0);
	MakeCode	(x=0X804A308);
	OpStkvar	(x,	0);
	MakeCode	(x=0X804A30E);
	OpStkvar	(x,	1);
	MakeCode	(x=0X804A317);
	OpStkvar	(x,	1);
	MakeCode	(x=0X804A327);
	OpStkvar	(x,	1);
	MakeCode	(x=0X804A32F);
	OpStkvar	(x,	1);
	MakeCode	(x=0X804A335);
	OpStkvar	(x,	1);
	MakeCode	(x=0X804A33E);
	OpStkvar	(x,	1);
	MakeComm	(0X804A344,	"n");
	MakeComm	(0X804A348,	"src");
	MakeComm	(0X804A34C,	"dest");
	MakeCode	(x=0X804A354);
	OpStkvar	(x,	1);
	MakeCode	(x=0X804A35D);
	OpStkvar	(x,	0);
	MakeCode	(x=0X804A368);
	OpStkvar	(x,	1);
	MakeCode	(x=0X804A36B);
	OpStkvar	(x,	0);
	MakeCode	(x=0X804A371);
	OpStkvar	(x,	1);
	MakeComm	(0X804A37D,	"hostshort");
	MakeCode	(x=0X804A385);
	OpStkvar	(x,	0);
	MakeCode	(x=0X804A389);
	OpStkvar	(x,	0);
	MakeCode	(x=0X804A38D);
	OpStkvar	(x,	1);
	MakeComm	(0X804A39A,	"hostshort");
	MakeCode	(x=0X804A3A2);
	OpStkvar	(x,	0);
	MakeCode	(x=0X804A3A9);
	OpStkvar	(x,	1);
	MakeComm	(0X804A3B6,	"hostshort");
	MakeCode	(x=0X804A3BE);
	OpStkvar	(x,	0);
	MakeCode	(x=0X804A3C5);
	OpStkvar	(x,	1);
	MakeComm	(0X804A3CE,	"hostshort");
	MakeCode	(x=0X804A3D6);
	OpStkvar	(x,	0);
	MakeCode	(x=0X804A3DD);
	OpStkvar	(x,	1);
	MakeCode	(x=0X804A3E4);
	OpStkvar	(x,	1);
	MakeCode	(x=0X804A3EE);
	OpStkvar	(x,	1);
	MakeCode	(x=0X804A3FC);
	OpStkvar	(x,	0);
	MakeCode	(x=0X804A403);
	OpStkvar	(x,	1);
	MakeCode	(x=0X804A408);
	OpStkvar	(x,	0);
	MakeCode	(x=0X804A411);
	OpStkvar	(x,	0);
	MakeCode	(x=0X804A41A);
	OpStkvar	(x,	0);
	MakeCode	(x=0X804A423);
	OpStkvar	(x,	0);
	MakeCode	(x=0X804A42C);
	OpStkvar	(x,	0);
	MakeCode	(x=0X804A435);
	OpStkvar	(x,	0);
	MakeCode	(x=0X804A43E);
	OpStkvar	(x,	0);
	MakeCode	(x=0X804A447);
	OpStkvar	(x,	0);
	MakeCode	(x=0X804A450);
	OpStkvar	(x,	0);
	MakeCode	(x=0X804A459);
	OpStkvar	(x,	0);
	MakeCode	(x=0X804A45F);
	OpStkvar	(x,	1);
	MakeCode	(x=0X804A468);
	OpStkvar	(x,	1);
	MakeCode	(x=0X804A478);
	OpStkvar	(x,	1);
	MakeCode	(x=0X804A47E);
	OpStkvar	(x,	1);
	MakeCode	(x=0X804A487);
	OpStkvar	(x,	1);
	MakeComm	(0X804A48D,	"n");
	MakeComm	(0X804A491,	"src");
	MakeComm	(0X804A495,	"dest");
	MakeCode	(x=0X804A49D);
	OpStkvar	(x,	1);
	MakeCode	(x=0X804A4A6);
	OpStkvar	(x,	0);
	MakeCode	(x=0X804A4AC);
	OpStkvar	(x,	1);
	MakeCode	(x=0X804A4B5);
	OpStkvar	(x,	1);
	MakeComm	(0X804A4C0,	"addr_len");
	MakeComm	(0X804A4C8,	"addr");
	MakeComm	(0X804A4CC,	"flags");
	MakeComm	(0X804A4D4,	"n");
	MakeCode	(x=0X804A4D8);
	OpStkvar	(x,	1);
	MakeComm	(0X804A4DE,	"buf");
	MakeComm	(0X804A4E2,	"fd");
	MakeCode	(x=0X804A4EA);
	OpStkvar	(x,	1);
	MakeCode	(x=0X804A4F2);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeComm	(0X804A51A,	"format");
	MakeComm	(0X804A51E,	"stream");
	MakeCode	(x=0X804A52D);
	OpStkvar	(x,	1);
	MakeCode	(x=0X804A533);
	OpStkvar	(x,	0);
	MakeCode	(x=0X804A539);
	OpStkvar	(x,	1);
	MakeCode	(x=0X804A53F);
	OpStkvar	(x,	1);
	MakeCode	(x=0X804A548);
	OpStkvar	(x,	1);
	MakeCode	(x=0X804A54E);
	OpStkvar	(x,	1);
	MakeCode	(x=0X804A55F);
	OpHex		(x,	1);
	MakeCode	(0X804A569);
	MakeName	(0X804A569,	"cmdprocessor");
	MakeCode	(x=0X804A56F);
	OpHex		(x,	1);
	MakeCode	(x=0X804A575);
	OpStkvar	(x,	1);
	MakeCode	(x=0X804A578);
	OpStkvar	(x,	0);
	MakeCode	(x=0X804A589);
	OpStkvar	(x,	0);
	MakeCode	(x=0X804A593);
	OpStkvar	(x,	0);
	MakeCode	(x=0X804A59A);
	OpStkvar	(x,	0);
	MakeCode	(x=0X804A5A1);
	OpStkvar	(x,	0);
	MakeCode	(x=0X804A5A8);
	OpStkvar	(x,	0);
	MakeCode	(x=0X804A5AF);
	OpStkvar	(x,	0);
	MakeCode	(x=0X804A5B6);
	OpStkvar	(x,	0);
	MakeCode	(x=0X804A5BD);
	OpStkvar	(x,	0);
	MakeCode	(x=0X804A5C4);
	OpStkvar	(x,	0);
	MakeCode	(x=0X804A5CB);
	OpStkvar	(x,	0);
	MakeCode	(x=0X804A5D2);
	OpStkvar	(x,	0);
	MakeCode	(x=0X804A5DD);
	OpStkvar	(x,	0);
	MakeCode	(x=0X804A5E4);
	OpStkvar	(x,	0);
	MakeCode	(x=0X804A5EB);
	OpStkvar	(x,	0);
	MakeCode	(x=0X804A5F1);
	OpStkvar	(x,	0);
	MakeCode	(x=0X804A5F5);
	OpStkvar	(x,	1);
	MakeComm	(0X804A600,	"n");
	MakeCode	(x=0X804A600);
	OpStkvar	(x,	0);
	MakeComm	(0X804A604,	"c");
	MakeCode	(x=0X804A604);
	OpStkvar	(x,	0);
	MakeComm	(0X804A60C,	"s");
	MakeCode	(x=0X804A60C);
	OpStkvar	(x,	0);
	MakeCode	(x=0X804A619);
	OpStkvar	(x,	0);
	MakeCode	(x=0X804A622);
	OpStkvar	(x,	1);
	MakeComm	(0X804A62D,	"n");
	MakeCode	(x=0X804A62D);
	OpStkvar	(x,	0);
	MakeComm	(0X804A631,	"c");
	MakeCode	(x=0X804A631);
	OpStkvar	(x,	0);
	MakeComm	(0X804A639,	"s");
	MakeCode	(x=0X804A639);
	OpStkvar	(x,	0);
	MakeCode	(x=0X804A646);
	OpStkvar	(x,	1);
	MakeCode	(x=0X804A64C);
	OpStkvar	(x,	0);
	MakeCode	(x=0X804A652);
	OpStkvar	(x,	1);
	MakeCode	(x=0X804A65B);
	OpStkvar	(x,	0);
	MakeCode	(x=0X804A661);
	OpStkvar	(x,	1);
	MakeComm	(0X804A66C,	"n");
	MakeCode	(x=0X804A66C);
	OpStkvar	(x,	0);
	MakeComm	(0X804A670,	"c");
	MakeCode	(x=0X804A670);
	OpStkvar	(x,	0);
	MakeComm	(0X804A678,	"s");
	MakeCode	(x=0X804A678);
	OpStkvar	(x,	0);
	MakeCode	(x=0X804A680);
	OpStkvar	(x,	1);
	MakeCode	(x=0X804A688);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X804A6AF);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X804A6B4);
	OpStkvar	(x,	1);
	MakeComm	(0X804A6BA,	"format");
	MakeCode	(x=0X804A6BA);
	OpStkvar	(x,	0);
	MakeComm	(0X804A6BE,	"s");
	MakeCode	(x=0X804A6BE);
	OpStkvar	(x,	0);
	MakeCode	(x=0X804A6C6);
	OpStkvar	(x,	1);
	MakeCode	(x=0X804A6CC);
	OpStkvar	(x,	0);
	MakeCode	(x=0X804A6DD);
	OpStkvar	(x,	1);
	MakeCode	(x=0X804A6EE);
	OpStkvar	(x,	1);
	MakeComm	(0X804A6F4,	"a3");
	MakeCode	(x=0X804A6F4);
	OpStkvar	(x,	0);
	MakeComm	(0X804A6F8,	"a2");
	MakeCode	(x=0X804A6F8);
	OpStkvar	(x,	0);
	MakeCode	(x=0X804A6FC);
	OpStkvar	(x,	1);
	MakeComm	(0X804A702,	"a1");
	MakeCode	(x=0X804A702);
	OpStkvar	(x,	0);
	MakeCode	(x=0X804A70C);
	OpStkvar	(x,	1);
	MakeCode	(x=0X804A712);
	OpStkvar	(x,	0);
	MakeCode	(x=0X804A723);
	OpStkvar	(x,	1);
	MakeComm	(0X804A73C,	"status");
	MakeCode	(x=0X804A73C);
	OpStkvar	(x,	0);
	MakeCode	(x=0X804A748);
	OpStkvar	(x,	1);
	MakeCode	(x=0X804A750);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X804A777);
	OpStkvar	(x,	0);
	MakeCode	(x=0X804A783);
	OpStkvar	(x,	1);
	MakeCode	(x=0X804A789);
	OpStkvar	(x,	1);
	MakeComm	(0X804A795,	"c");
	MakeCode	(x=0X804A795);
	OpStkvar	(x,	0);
	MakeCode	(x=0X804A799);
	OpStkvar	(x,	1);
	MakeComm	(0X804A79C,	"s");
	MakeCode	(x=0X804A79C);
	OpStkvar	(x,	0);
	MakeCode	(x=0X804A7A8);
	OpStkvar	(x,	1);
	MakeComm	(0X804A7B3,	"n");
	MakeCode	(x=0X804A7B3);
	OpStkvar	(x,	0);
	MakeComm	(0X804A7B7,	"c");
	MakeCode	(x=0X804A7B7);
	OpStkvar	(x,	0);
	MakeComm	(0X804A7BF,	"s");
	MakeCode	(x=0X804A7BF);
	OpStkvar	(x,	0);
	MakeCode	(x=0X804A7C8);
	OpStkvar	(x,	0);
	MakeCode	(x=0X804A7CF);
	OpStkvar	(x,	1);
	MakeCode	(x=0X804A7D5);
	OpStkvar	(x,	1);
	MakeCode	(x=0X804A7DB);
	OpStkvar	(x,	0);
	MakeCode	(x=0X804A7EC);
	OpStkvar	(x,	1);
	MakeCode	(x=0X804A801);
	OpStkvar	(x,	0);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X804A809);
	OpStkvar	(x,	1);
	MakeComm	(0X804A80F,	"command");
	MakeCode	(x=0X804A80F);
	OpStkvar	(x,	0);
	MakeCode	(x=0X804A817);
	OpStkvar	(x,	0);
	MakeCode	(x=0X804A81D);
	OpStkvar	(x,	0);
	MakeCode	(x=0X804A826);
	OpStkvar	(x,	1);
	MakeCode	(x=0X804A82C);
	OpStkvar	(x,	1);
	MakeComm	(0X804A832,	"stream");
	MakeCode	(x=0X804A832);
	OpStkvar	(x,	0);
	MakeComm	(0X804A836,	"n");
	MakeCode	(x=0X804A836);
	OpStkvar	(x,	0);
	MakeComm	(0X804A83E,	"size");
	MakeCode	(x=0X804A83E);
	OpStkvar	(x,	0);
	MakeComm	(0X804A846,	"ptr");
	MakeCode	(x=0X804A846);
	OpStkvar	(x,	0);
	MakeCode	(x=0X804A84E);
	OpStkvar	(x,	1);
	MakeComm	(0X804A854,	"stream");
	MakeCode	(x=0X804A854);
	OpStkvar	(x,	0);
	MakeCode	(x=0X804A85C);
	OpStkvar	(x,	1);
	MakeCode	(x=0X804A862);
	OpStkvar	(x,	0);
	MakeCode	(x=0X804A873);
	OpStkvar	(x,	1);
	MakeCode	(x=0X804A88B);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X804A890);
	OpStkvar	(x,	1);
	MakeCode	(x=0X804A896);
	OpStkvar	(x,	1);
	MakeCode	(x=0X804A89C);
	OpStkvar	(x,	0);
	MakeCode	(x=0X804A8AD);
	OpStkvar	(x,	1);
	MakeCode	(x=0X804A8D1);
	OpStkvar	(x,	1);
	MakeCode	(x=0X804A8D7);
	OpStkvar	(x,	0);
	MakeCode	(x=0X804A8E8);
	OpStkvar	(x,	1);
	MakeCode	(x=0X804A8F9);
	OpStkvar	(x,	1);
	MakeComm	(0X804A8FF,	"a3");
	MakeCode	(x=0X804A8FF);
	OpStkvar	(x,	0);
	MakeComm	(0X804A903,	"a2");
	MakeCode	(x=0X804A903);
	OpStkvar	(x,	0);
	MakeCode	(x=0X804A907);
	OpStkvar	(x,	1);
	MakeComm	(0X804A90D,	"a1");
	MakeCode	(x=0X804A90D);
	OpStkvar	(x,	0);
	MakeCode	(x=0X804A917);
	OpStkvar	(x,	1);
	MakeCode	(x=0X804A91D);
	OpStkvar	(x,	0);
	MakeCode	(x=0X804A92E);
	OpStkvar	(x,	1);
	MakeComm	(0X804A947,	"status");
	MakeCode	(x=0X804A947);
	OpStkvar	(x,	0);
	MakeCode	(x=0X804A953);
	OpStkvar	(x,	1);
	MakeCode	(x=0X804A95B);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X804A982);
	OpStkvar	(x,	0);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X804A98A);
	OpStkvar	(x,	0);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X804A996);
	OpStkvar	(x,	0);
	MakeCode	(x=0X804A99C);
	OpStkvar	(x,	0);
	MakeCode	(x=0X804A9A5);
	OpStkvar	(x,	1);
	MakeCode	(x=0X804A9AB);
	OpStkvar	(x,	1);
	MakeComm	(0X804A9B1,	"stream");
	MakeCode	(x=0X804A9B1);
	OpStkvar	(x,	0);
	MakeComm	(0X804A9B5,	"n");
	MakeCode	(x=0X804A9B5);
	OpStkvar	(x,	0);
	MakeComm	(0X804A9BD,	"size");
	MakeCode	(x=0X804A9BD);
	OpStkvar	(x,	0);
	MakeComm	(0X804A9C5,	"ptr");
	MakeCode	(x=0X804A9C5);
	OpStkvar	(x,	0);
	MakeCode	(x=0X804A9CD);
	OpStkvar	(x,	1);
	MakeComm	(0X804A9D3,	"stream");
	MakeCode	(x=0X804A9D3);
	OpStkvar	(x,	0);
	MakeCode	(x=0X804A9DB);
	OpStkvar	(x,	1);
	MakeCode	(x=0X804A9E1);
	OpStkvar	(x,	0);
	MakeCode	(x=0X804A9F2);
	OpStkvar	(x,	1);
	MakeCode	(x=0X804AA0A);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X804AA0F);
	OpStkvar	(x,	1);
	MakeCode	(x=0X804AA15);
	OpStkvar	(x,	1);
	MakeCode	(x=0X804AA1B);
	OpStkvar	(x,	0);
	MakeCode	(x=0X804AA2C);
	OpStkvar	(x,	1);
	MakeCode	(x=0X804AA50);
	OpStkvar	(x,	1);
	MakeCode	(x=0X804AA56);
	OpStkvar	(x,	0);
	MakeCode	(x=0X804AA67);
	OpStkvar	(x,	1);
	MakeCode	(x=0X804AA78);
	OpStkvar	(x,	1);
	MakeComm	(0X804AA7E,	"a3");
	MakeCode	(x=0X804AA7E);
	OpStkvar	(x,	0);
	MakeComm	(0X804AA82,	"a2");
	MakeCode	(x=0X804AA82);
	OpStkvar	(x,	0);
	MakeCode	(x=0X804AA86);
	OpStkvar	(x,	1);
	MakeComm	(0X804AA8C,	"a1");
	MakeCode	(x=0X804AA8C);
	OpStkvar	(x,	0);
	MakeCode	(x=0X804AA96);
	OpStkvar	(x,	1);
	MakeCode	(x=0X804AA9C);
	OpStkvar	(x,	0);
	MakeCode	(x=0X804AAAD);
	OpStkvar	(x,	1);
	MakeComm	(0X804AAC6,	"status");
	MakeCode	(x=0X804AAC6);
	OpStkvar	(x,	0);
	MakeCode	(x=0X804AAD2);
	OpStkvar	(x,	1);
	MakeCode	(x=0X804AADA);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X804AB01);
	OpStkvar	(x,	0);
	MakeCode	(x=0X804AB0D);
	OpStkvar	(x,	1);
	MakeCode	(x=0X804AB13);
	OpStkvar	(x,	1);
	MakeComm	(0X804AB1F,	"c");
	MakeCode	(x=0X804AB1F);
	OpStkvar	(x,	0);
	MakeCode	(x=0X804AB23);
	OpStkvar	(x,	1);
	MakeComm	(0X804AB26,	"s");
	MakeCode	(x=0X804AB26);
	OpStkvar	(x,	0);
	MakeCode	(x=0X804AB32);
	OpStkvar	(x,	1);
	MakeComm	(0X804AB3D,	"n");
	MakeCode	(x=0X804AB3D);
	OpStkvar	(x,	0);
	MakeComm	(0X804AB41,	"c");
	MakeCode	(x=0X804AB41);
	OpStkvar	(x,	0);
	MakeComm	(0X804AB49,	"s");
	MakeCode	(x=0X804AB49);
	OpStkvar	(x,	0);
	MakeCode	(x=0X804AB52);
	OpStkvar	(x,	0);
	MakeCode	(x=0X804AB59);
	OpStkvar	(x,	1);
	MakeCode	(x=0X804AB5F);
	OpStkvar	(x,	1);
	MakeCode	(x=0X804AB65);
	OpStkvar	(x,	0);
	MakeCode	(x=0X804AB76);
	OpStkvar	(x,	1);
	MakeCode	(x=0X804AB8B);
	OpStkvar	(x,	0);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X804AB93);
	OpStkvar	(x,	1);
	MakeComm	(0X804AB99,	"command");
	MakeCode	(x=0X804AB99);
	OpStkvar	(x,	0);
	MakeCode	(x=0X804ABA1);
	OpStkvar	(x,	0);
	MakeCode	(x=0X804ABA7);
	OpStkvar	(x,	0);
	MakeCode	(x=0X804ABB0);
	OpStkvar	(x,	1);
	MakeCode	(x=0X804ABB6);
	OpStkvar	(x,	1);
	MakeComm	(0X804ABBC,	"stream");
	MakeCode	(x=0X804ABBC);
	OpStkvar	(x,	0);
	MakeComm	(0X804ABC0,	"n");
	MakeCode	(x=0X804ABC0);
	OpStkvar	(x,	0);
	MakeComm	(0X804ABC8,	"size");
	MakeCode	(x=0X804ABC8);
	OpStkvar	(x,	0);
	MakeComm	(0X804ABD0,	"ptr");
	MakeCode	(x=0X804ABD0);
	OpStkvar	(x,	0);
	MakeCode	(x=0X804ABD8);
	OpStkvar	(x,	1);
	MakeComm	(0X804ABDE,	"stream");
	MakeCode	(x=0X804ABDE);
	OpStkvar	(x,	0);
	MakeCode	(x=0X804ABE6);
	OpStkvar	(x,	1);
	MakeCode	(x=0X804ABEC);
	OpStkvar	(x,	0);
	MakeCode	(x=0X804ABFD);
	OpStkvar	(x,	1);
	MakeCode	(x=0X804AC15);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X804AC1A);
	OpStkvar	(x,	1);
	MakeCode	(x=0X804AC20);
	OpStkvar	(x,	1);
	MakeCode	(x=0X804AC26);
	OpStkvar	(x,	0);
	MakeCode	(x=0X804AC37);
	OpStkvar	(x,	1);
	MakeCode	(x=0X804AC5B);
	OpStkvar	(x,	1);
	MakeCode	(x=0X804AC61);
	OpStkvar	(x,	0);
	MakeCode	(x=0X804AC72);
	OpStkvar	(x,	1);
	MakeCode	(x=0X804AC83);
	OpStkvar	(x,	1);
	MakeComm	(0X804AC89,	"a3");
	MakeCode	(x=0X804AC89);
	OpStkvar	(x,	0);
	MakeComm	(0X804AC8D,	"a2");
	MakeCode	(x=0X804AC8D);
	OpStkvar	(x,	0);
	MakeCode	(x=0X804AC91);
	OpStkvar	(x,	1);
	MakeComm	(0X804AC97,	"a1");
	MakeCode	(x=0X804AC97);
	OpStkvar	(x,	0);
	MakeCode	(x=0X804ACA1);
	OpStkvar	(x,	1);
	MakeCode	(x=0X804ACA7);
	OpStkvar	(x,	0);
	MakeCode	(x=0X804ACB8);
	OpStkvar	(x,	1);
	MakeComm	(0X804ACD1,	"status");
	MakeCode	(x=0X804ACD1);
	OpStkvar	(x,	0);
	MakeCode	(x=0X804ACDD);
	OpStkvar	(x,	1);
	MakeCode	(x=0X804ACE5);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X804AD0C);
	OpStkvar	(x,	0);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X804AD14);
	OpStkvar	(x,	0);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X804AD20);
	OpStkvar	(x,	0);
	MakeCode	(x=0X804AD26);
	OpStkvar	(x,	0);
	MakeCode	(x=0X804AD2F);
	OpStkvar	(x,	1);
	MakeCode	(x=0X804AD35);
	OpStkvar	(x,	1);
	MakeComm	(0X804AD3B,	"stream");
	MakeCode	(x=0X804AD3B);
	OpStkvar	(x,	0);
	MakeComm	(0X804AD3F,	"n");
	MakeCode	(x=0X804AD3F);
	OpStkvar	(x,	0);
	MakeComm	(0X804AD47,	"size");
	MakeCode	(x=0X804AD47);
	OpStkvar	(x,	0);
	MakeComm	(0X804AD4F,	"ptr");
	MakeCode	(x=0X804AD4F);
	OpStkvar	(x,	0);
	MakeCode	(x=0X804AD57);
	OpStkvar	(x,	1);
	MakeComm	(0X804AD5D,	"stream");
	MakeCode	(x=0X804AD5D);
	OpStkvar	(x,	0);
	MakeCode	(x=0X804AD65);
	OpStkvar	(x,	1);
	MakeCode	(x=0X804AD6B);
	OpStkvar	(x,	0);
	MakeCode	(x=0X804AD7C);
	OpStkvar	(x,	1);
	MakeCode	(x=0X804AD94);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X804AD99);
	OpStkvar	(x,	1);
	MakeCode	(x=0X804AD9F);
	OpStkvar	(x,	1);
	MakeCode	(x=0X804ADA5);
	OpStkvar	(x,	0);
	MakeCode	(x=0X804ADB6);
	OpStkvar	(x,	1);
	MakeCode	(x=0X804ADDA);
	OpStkvar	(x,	1);
	MakeCode	(x=0X804ADE0);
	OpStkvar	(x,	0);
	MakeCode	(x=0X804ADF1);
	OpStkvar	(x,	1);
	MakeCode	(x=0X804AE02);
	OpStkvar	(x,	1);
	MakeComm	(0X804AE08,	"a3");
	MakeCode	(x=0X804AE08);
	OpStkvar	(x,	0);
	MakeComm	(0X804AE0C,	"a2");
	MakeCode	(x=0X804AE0C);
	OpStkvar	(x,	0);
	MakeCode	(x=0X804AE10);
	OpStkvar	(x,	1);
	MakeComm	(0X804AE16,	"a1");
	MakeCode	(x=0X804AE16);
	OpStkvar	(x,	0);
	MakeCode	(x=0X804AE20);
	OpStkvar	(x,	1);
	MakeCode	(x=0X804AE26);
	OpStkvar	(x,	0);
	MakeCode	(x=0X804AE37);
	OpStkvar	(x,	1);
	MakeComm	(0X804AE50,	"status");
	MakeCode	(x=0X804AE50);
	OpStkvar	(x,	0);
	MakeCode	(x=0X804AE5C);
	OpStkvar	(x,	1);
	MakeCode	(x=0X804AE64);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X804AE8B);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X804AE90);
	OpStkvar	(x,	1);
	MakeComm	(0X804AE96,	"format");
	MakeCode	(x=0X804AE96);
	OpStkvar	(x,	0);
	MakeComm	(0X804AE9A,	"s");
	MakeCode	(x=0X804AE9A);
	OpStkvar	(x,	0);
	MakeCode	(x=0X804AEA2);
	OpStkvar	(x,	1);
	MakeCode	(x=0X804AEA8);
	OpStkvar	(x,	0);
	MakeCode	(x=0X804AEB9);
	OpStkvar	(x,	1);
	MakeCode	(x=0X804AECA);
	OpStkvar	(x,	1);
	MakeComm	(0X804AED0,	"a3");
	MakeCode	(x=0X804AED0);
	OpStkvar	(x,	0);
	MakeComm	(0X804AED4,	"a2");
	MakeCode	(x=0X804AED4);
	OpStkvar	(x,	0);
	MakeCode	(x=0X804AED8);
	OpStkvar	(x,	1);
	MakeComm	(0X804AEDE,	"a1");
	MakeCode	(x=0X804AEDE);
	OpStkvar	(x,	0);
	MakeCode	(x=0X804AEE8);
	OpStkvar	(x,	1);
	MakeCode	(x=0X804AEEE);
	OpStkvar	(x,	0);
	MakeCode	(x=0X804AEFF);
	OpStkvar	(x,	1);
	MakeComm	(0X804AF18,	"status");
	MakeCode	(x=0X804AF18);
	OpStkvar	(x,	0);
	MakeCode	(x=0X804AF24);
	OpStkvar	(x,	1);
	MakeCode	(x=0X804AF2C);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X804AF53);
	OpStkvar	(x,	0);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X804AF5B);
	OpStkvar	(x,	0);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X804AF67);
	OpStkvar	(x,	0);
	MakeCode	(x=0X804AF6D);
	OpStkvar	(x,	0);
	MakeCode	(x=0X804AF76);
	OpStkvar	(x,	1);
	MakeCode	(x=0X804AF7C);
	OpStkvar	(x,	1);
	MakeComm	(0X804AF82,	"stream");
	MakeCode	(x=0X804AF82);
	OpStkvar	(x,	0);
	MakeComm	(0X804AF86,	"n");
	MakeCode	(x=0X804AF86);
	OpStkvar	(x,	0);
	MakeComm	(0X804AF8E,	"size");
	MakeCode	(x=0X804AF8E);
	OpStkvar	(x,	0);
	MakeComm	(0X804AF96,	"ptr");
	MakeCode	(x=0X804AF96);
	OpStkvar	(x,	0);
	MakeCode	(x=0X804AF9E);
	OpStkvar	(x,	1);
	MakeComm	(0X804AFA4,	"stream");
	MakeCode	(x=0X804AFA4);
	OpStkvar	(x,	0);
	MakeCode	(x=0X804AFAC);
	OpStkvar	(x,	1);
	MakeCode	(x=0X804AFB2);
	OpStkvar	(x,	0);
	MakeCode	(x=0X804AFC3);
	OpStkvar	(x,	1);
	MakeCode	(x=0X804AFDB);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X804AFE0);
	OpStkvar	(x,	1);
	MakeCode	(x=0X804AFE6);
	OpStkvar	(x,	1);
	MakeCode	(x=0X804AFEC);
	OpStkvar	(x,	0);
	MakeCode	(x=0X804AFFD);
	OpStkvar	(x,	1);
	MakeCode	(x=0X804B021);
	OpStkvar	(x,	1);
	MakeCode	(x=0X804B027);
	OpStkvar	(x,	0);
	MakeCode	(x=0X804B038);
	OpStkvar	(x,	1);
	MakeCode	(x=0X804B049);
	OpStkvar	(x,	1);
	MakeComm	(0X804B04F,	"a3");
	MakeCode	(x=0X804B04F);
	OpStkvar	(x,	0);
	MakeComm	(0X804B053,	"a2");
	MakeCode	(x=0X804B053);
	OpStkvar	(x,	0);
	MakeCode	(x=0X804B057);
	OpStkvar	(x,	1);
	MakeComm	(0X804B05D,	"a1");
	MakeCode	(x=0X804B05D);
	OpStkvar	(x,	0);
	MakeCode	(x=0X804B067);
	OpStkvar	(x,	1);
	MakeCode	(x=0X804B06D);
	OpStkvar	(x,	0);
	MakeCode	(x=0X804B07E);
	OpStkvar	(x,	1);
	MakeComm	(0X804B097,	"status");
	MakeCode	(x=0X804B097);
	OpStkvar	(x,	0);
	MakeCode	(x=0X804B0A3);
	OpStkvar	(x,	1);
	MakeCode	(x=0X804B0AB);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X804B0CE);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X804B0D3);
	OpStkvar	(x,	1);
	MakeCode	(x=0X804B0E4);
	OpStkvar	(x,	1);
	MakeComm	(0X804B0EA,	"a3");
	MakeCode	(x=0X804B0EA);
	OpStkvar	(x,	0);
	MakeComm	(0X804B0EE,	"a2");
	MakeCode	(x=0X804B0EE);
	OpStkvar	(x,	0);
	MakeCode	(x=0X804B0F6);
	OpStkvar	(x,	1);
	MakeComm	(0X804B0FC,	"a1");
	MakeCode	(x=0X804B0FC);
	OpStkvar	(x,	0);
	MakeComm	(0X804B10D,	"status");
	MakeCode	(x=0X804B10D);
	OpStkvar	(x,	0);
	MakeCode	(x=0X804B119);
	OpStkvar	(x,	1);
	MakeCode	(x=0X804B121);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X804B144);
	OpStkvar	(x,	1);
	MakeCode	(x=0X804B14D);
	OpStkvar	(x,	1);
	MakeComm	(0X804B153,	"format");
	MakeCode	(x=0X804B153);
	OpStkvar	(x,	0);
	MakeComm	(0X804B157,	"maxlen");
	MakeCode	(x=0X804B157);
	OpStkvar	(x,	0);
	MakeComm	(0X804B15F,	"s");
	MakeCode	(x=0X804B15F);
	OpStkvar	(x,	0);
	MakeCode	(x=0X804B167);
	OpStkvar	(x,	1);
	MakeComm	(0X804B16D,	"a3");
	MakeCode	(x=0X804B16D);
	OpStkvar	(x,	0);
	MakeComm	(0X804B171,	"a2");
	MakeCode	(x=0X804B171);
	OpStkvar	(x,	0);
	MakeCode	(x=0X804B179);
	OpStkvar	(x,	1);
	MakeComm	(0X804B17F,	"a1");
	MakeCode	(x=0X804B17F);
	OpStkvar	(x,	0);
	MakeComm	(0X804B192,	"status");
	MakeCode	(x=0X804B192);
	OpStkvar	(x,	0);
	MakeCode	(x=0X804B19E);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X804B1A3);
	OpStkvar	(x,	1);
	MakeComm	(0X804B1A9,	"format");
	MakeCode	(x=0X804B1A9);
	OpStkvar	(x,	0);
	MakeComm	(0X804B1AD,	"s");
	MakeCode	(x=0X804B1AD);
	OpStkvar	(x,	0);
	MakeCode	(x=0X804B1B5);
	OpStkvar	(x,	1);
	MakeCode	(x=0X804B1BB);
	OpStkvar	(x,	0);
	MakeCode	(x=0X804B1CC);
	OpStkvar	(x,	1);
	MakeCode	(x=0X804B1DD);
	OpStkvar	(x,	1);
	MakeComm	(0X804B1E3,	"a3");
	MakeCode	(x=0X804B1E3);
	OpStkvar	(x,	0);
	MakeComm	(0X804B1E7,	"a2");
	MakeCode	(x=0X804B1E7);
	OpStkvar	(x,	0);
	MakeCode	(x=0X804B1EB);
	OpStkvar	(x,	1);
	MakeComm	(0X804B1F1,	"a1");
	MakeCode	(x=0X804B1F1);
	OpStkvar	(x,	0);
	MakeCode	(x=0X804B1FB);
	OpStkvar	(x,	1);
	MakeCode	(x=0X804B201);
	OpStkvar	(x,	0);
	MakeCode	(x=0X804B212);
	OpStkvar	(x,	1);
	MakeComm	(0X804B227,	"status");
	MakeCode	(x=0X804B227);
	OpStkvar	(x,	0);
	MakeCode	(x=0X804B233);
	OpStkvar	(x,	1);
	MakeComm	(0X804B23E,	"n");
	MakeCode	(x=0X804B23E);
	OpStkvar	(x,	0);
	MakeComm	(0X804B242,	"c");
	MakeCode	(x=0X804B242);
	OpStkvar	(x,	0);
	MakeComm	(0X804B24A,	"s");
	MakeCode	(x=0X804B24A);
	OpStkvar	(x,	0);
	MakeCode	(x=0X804B252);
	OpStkvar	(x,	1);
	MakeComm	(0X804B25B,	"nbytes");
	MakeCode	(x=0X804B25B);
	OpStkvar	(x,	0);
	MakeCode	(x=0X804B263);
	OpStkvar	(x,	1);
	MakeComm	(0X804B269,	"buf");
	MakeCode	(x=0X804B269);
	OpStkvar	(x,	0);
	MakeComm	(0X804B26D,	"fd");
	MakeCode	(x=0X804B26D);
	OpStkvar	(x,	0);
	MakeCode	(x=0X804B275);
	OpStkvar	(x,	0);
	MakeCode	(x=0X804B27B);
	OpStkvar	(x,	0);
	MakeComm	(0X804B288,	"status");
	MakeCode	(x=0X804B288);
	OpStkvar	(x,	0);
	MakeCode	(0X804B294);
	MakeCode	(x=0X804B295);
	OpStkvar	(x,	1);
	MakeCode	(x=0X804B2A6);
	OpHex		(x,	1);
	MakeCode	(0X804B2B1);
	MakeName	(0X804B2B1,	"cleanup_stale_connections");
	MakeCode	(x=0X804B2B5);
	OpHex		(x,	1);
	MakeComm	(0X804B2B8,	"timer");
	MakeCode	(x=0X804B2D9);
	OpStkvar	(x,	0);
	MakeCode	(x=0X804B2E1);
	OpStkvar	(x,	1);
	MakeCode	(x=0X804B2EC);
	OpStkvar	(x,	1);
	MakeComm	(0X804B2F2,	"timer");
	MakeComm	(0X804B321,	"format");
	MakeComm	(0X804B325,	"stream");
	MakeCode	(x=0X804B32D);
	OpStkvar	(x,	1);
	MakeCode	(x=0X804B333);
	OpStkvar	(x,	0);
	MakeCode	(x=0X804B336);
	OpStkvar	(x,	1);
	MakeCode	(x=0X804B341);
	OpStkvar	(x,	1);
	MakeCode	(x=0X804B344);
	OpStkvar	(x,	0);
	MakeCode	(x=0X804B34C);
	OpStkvar	(x,	1);
	MakeCode	(x=0X804B352);
	OpStkvar	(x,	0);
	MakeCode	(x=0X804B35A);
	OpStkvar	(x,	1);
	MakeComm	(0X804B35F,	"options");
	MakeCode	(x=0X804B367);
	OpStkvar	(x,	1);
	MakeComm	(0X804B36A,	"stat_loc");
	MakeComm	(0X804B36E,	"pid");
	MakeCode	(x=0X804B376);
	OpStkvar	(x,	0);
	MakeCode	(x=0X804B379);
	OpStkvar	(x,	0);
	MakeCode	(x=0X804B383);
	OpStkvar	(x,	1);
	MakeComm	(0X804B389,	"timer");
	MakeComm	(0X804B3B8,	"format");
	MakeComm	(0X804B3BC,	"stream");
	MakeCode	(x=0X804B3C4);
	OpStkvar	(x,	1);
	MakeCode	(x=0X804B3CA);
	OpStkvar	(x,	0);
	MakeCode	(x=0X804B3CD);
	OpStkvar	(x,	1);
	MakeComm	(0X804B3D3,	"fd");
	MakeCode	(x=0X804B3DB);
	OpStkvar	(x,	1);
	MakeComm	(0X804B3E0,	"sig");
	MakeComm	(0X804B3E8,	"pid");
	MakeCode	(x=0X804B3F0);
	OpStkvar	(x,	1);
	MakeCode	(x=0X804B3FB);
	OpStkvar	(x,	1);
	MakeCode	(x=0X804B3FE);
	OpStkvar	(x,	0);
	MakeCode	(x=0X804B403);
	OpStkvar	(x,	1);
	MakeCode	(x=0X804B409);
	OpStkvar	(x,	0);
	MakeCode	(x=0X804B40E);
	OpStkvar	(x,	1);
	MakeCode	(x=0X804B414);
	OpStkvar	(x,	0);
	MakeCode	(x=0X804B417);
	OpStkvar	(x,	1);
	MakeComm	(0X804B41D,	"fd");
	MakeCode	(x=0X804B425);
	OpStkvar	(x,	1);
	MakeCode	(x=0X804B430);
	OpStkvar	(x,	1);
	MakeCode	(x=0X804B433);
	OpStkvar	(x,	0);
	MakeCode	(x=0X804B436);
	OpStkvar	(x,	0);
	MakeComm	(0X804B440,	"timer");
	MakeCode	(0X804B454);
	MakeCode	(x=0X804B455);
	OpHex		(x,	1);
	MakeCode	(0X804B45B);
	MakeName	(0X804B45B,	"udp_state_machine");
	MakeCode	(x=0X804B461);
	OpHex		(x,	1);
	MakeCode	(x=0X804B467);
	OpStkvar	(x,	1);
	MakeCode	(x=0X804B46A);
	OpStkvar	(x,	0);
	MakeCode	(x=0X804B470);
	OpStkvar	(x,	1);
	MakeCode	(x=0X804B473);
	OpStkvar	(x,	0);
	MakeCode	(x=0X804B47F);
	OpStkvar	(x,	0);
	MakeCode	(x=0X804B489);
	OpStkvar	(x,	1);
	MakeCode	(x=0X804B48F);
	OpStkvar	(x,	0);
	MakeCode	(x=0X804B495);
	OpStkvar	(x,	1);
	MakeComm	(0X804B4A2,	"netshort");
	MakeComm	(0X804B4D0,	"format");
	MakeComm	(0X804B4D4,	"stream");
	MakeCode	(x=0X804B4E1);
	OpStkvar	(x,	1);
	MakeCode	(x=0X804B4EA);
	OpStkvar	(x,	0);
	MakeCode	(x=0X804B4F0);
	OpStkvar	(x,	1);
	MakeCode	(x=0X804B4F9);
	OpStkvar	(x,	0);
	MakeCode	(x=0X804B4FF);
	OpStkvar	(x,	1);
	MakeComm	(0X804B50C,	"netshort");
	MakeComm	(0X804B53A,	"format");
	MakeComm	(0X804B53E,	"stream");
	MakeCode	(x=0X804B54B);
	OpStkvar	(x,	1);
	MakeComm	(0X804B558,	"hostshort");
	MakeCode	(x=0X804B562);
	OpStkvar	(x,	1);
	MakeComm	(0X804B56F,	"netshort");
	MakeCode	(x=0X804B589);
	OpStkvar	(x,	1);
	MakeComm	(0X804B596,	"netshort");
	MakeCode	(x=0X804B5A1);
	OpStkvar	(x,	1);
	MakeComm	(0X804B5AE,	"hostshort");
	MakeComm	(0X804B5D4,	"format");
	MakeComm	(0X804B5D8,	"stream");
	MakeCode	(x=0X804B5E5);
	OpStkvar	(x,	1);
	MakeComm	(0X804B5F2,	"netshort");
	MakeCode	(x=0X804B5FD);
	OpStkvar	(x,	1);
	MakeComm	(0X804B609,	"netshort");
	MakeComm	(0X804B614,	"int");
	MakeComm	(0X804B618,	"int");
	MakeCode	(x=0X804B61C);
	OpStkvar	(x,	1);
	MakeComm	(0X804B625,	"char");
	MakeComm	(0X804B62C,	"int");
	MakeComm	(0X804B633,	"int");
	MakeComm	(0X804B63A,	"int");
	MakeCode	(x=0X804B63E);
	OpStkvar	(x,	1);
	MakeComm	(0X804B647,	"s2");
	MakeComm	(0X804B64E,	"int");
	MakeComm	(0X804B655,	"int");
	MakeComm	(0X804B65C,	"int");
	MakeCode	(x=0X804B660);
	OpStkvar	(x,	1);
	MakeComm	(0X804B666,	"void *");
	MakeCode	(x=0X804B66E);
	OpStkvar	(x,	0);
	MakeCode	(x=0X804B674);
	OpStkvar	(x,	0);
	MakeCode	(x=0X804B681);
	OpStkvar	(x,	1);
	MakeCode	(x=0X804B693);
	OpStkvar	(x,	1);
	MakeCode	(x=0X804B69C);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X804B6A1);
	OpStkvar	(x,	1);
	MakeComm	(0X804B6A8,	"format");
	MakeComm	(0X804B6AC,	"maxlen");
	MakeComm	(0X804B6B4,	"s");
	MakeCode	(x=0X804B6BC);
	OpStkvar	(x,	1);
	MakeComm	(0X804B6C9,	"netshort");
	MakeCode	(x=0X804B6D4);
	OpStkvar	(x,	1);
	MakeCode	(x=0X804B6D7);
	OpStkvar	(x,	0);
	MakeCode	(x=0X804B6E8);
	OpStkvar	(x,	1);
	MakeCode	(x=0X804B704);
	OpStkvar	(x,	1);
	MakeCode	(x=0X804B707);
	OpStkvar	(x,	0);
	MakeCode	(x=0X804B718);
	OpStkvar	(x,	1);
	MakeComm	(0X804B729,	"n");
	MakeCode	(x=0X804B72D);
	OpStkvar	(x,	1);
	MakeComm	(0X804B730,	"s2");
	MakeCode	(x=0X804B734);
	OpStkvar	(x,	1);
	MakeComm	(0X804B73A,	"s1");
	MakeCode	(x=0X804B746);
	OpStkvar	(x,	1);
	MakeCode	(x=0X804B759);
	OpStkvar	(x,	1);
	MakeCode	(x=0X804B763);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X804B768);
	OpStkvar	(x,	1);
	MakeComm	(0X804B76B,	"format");
	MakeComm	(0X804B76F,	"maxlen");
	MakeComm	(0X804B777,	"s");
	MakeCode	(x=0X804B77F);
	OpStkvar	(x,	1);
	MakeCode	(x=0X804B782);
	OpStkvar	(x,	0);
	MakeCode	(x=0X804B793);
	OpStkvar	(x,	1);
	MakeCode	(x=0X804B7A4);
	OpStkvar	(x,	1);
	MakeCode	(x=0X804B7B2);
	OpStkvar	(x,	1);
	MakeCode	(x=0X804B7BF);
	OpStkvar	(x,	1);
	MakeCode	(x=0X804B7C2);
	OpStkvar	(x,	0);
	MakeCode	(x=0X804B7D3);
	OpStkvar	(x,	1);
	MakeCode	(x=0X804B7EC);
	OpStkvar	(x,	1);
	MakeCode	(x=0X804B7FF);
	OpStkvar	(x,	1);
	MakeCode	(x=0X804B811);
	OpStkvar	(x,	1);
	MakeComm	(0X804B817,	"pipedes");
	MakeCode	(x=0X804B82E);
	OpStkvar	(x,	1);
	MakeCode	(x=0X804B836);
	OpStkvar	(x,	1);
	MakeCode	(x=0X804B843);
	OpStkvar	(x,	1);
	MakeComm	(0X804B849,	"ptr");
	MakeCode	(x=0X804B856);
	OpStkvar	(x,	1);
	MakeCode	(x=0X804B862);
	OpStkvar	(x,	1);
	MakeCode	(x=0X804B868);
	OpStkvar	(x,	1);
	MakeCode	(x=0X804B871);
	OpStkvar	(x,	1);
	MakeComm	(0X804B877,	"fd");
	MakeCode	(x=0X804B87F);
	OpStkvar	(x,	1);
	MakeComm	(0X804B885,	"connection");
	MakeComm	(0X804B88D,	"status");
	MakeCode	(x=0X804B899);
	OpStkvar	(x,	1);
	MakeCode	(x=0X804B89F);
	OpStkvar	(x,	1);
	MakeCode	(x=0X804B8A8);
	OpStkvar	(x,	1);
	MakeComm	(0X804B8AE,	"fd");
	MakeCode	(x=0X804B8B6);
	OpStkvar	(x,	1);
	MakeComm	(0X804B8C0,	"timer");
	MakeCode	(x=0X804B8CC);
	OpStkvar	(x,	1);
	MakeCode	(x=0X804B8D5);
	OpStkvar	(x,	1);
	MakeComm	(0X804B8E2,	"netshort");
	MakeCode	(x=0X804B8ED);
	OpStkvar	(x,	1);
	MakeCode	(x=0X804B8F6);
	OpStkvar	(x,	1);
	MakeComm	(0X804B8FF,	"n");
	MakeComm	(0X804B903,	"buf");
	MakeComm	(0X804B907,	"fd");
	MakeCode	(x=0X804B90F);
	OpStkvar	(x,	0);
	MakeCode	(x=0X804B915);
	OpStkvar	(x,	0);
	MakeCode	(x=0X804B91E);
	OpStkvar	(x,	1);
	MakeComm	(0X804B92B,	"netshort");
	MakeCode	(x=0X804B936);
	OpStkvar	(x,	1);
	MakeCode	(x=0X804B942);
	OpStkvar	(x,	1);
	MakeComm	(0X804B94B,	"fd");
	MakeCode	(x=0X804B953);
	OpStkvar	(x,	1);
	MakeComm	(0X804B95B,	"sig");
	MakeComm	(0X804B963,	"pid");
	MakeCode	(x=0X804B96B);
	OpStkvar	(x,	1);
	MakeCode	(x=0X804B97E);
	OpStkvar	(x,	1);
	MakeCode	(x=0X804B990);
	OpStkvar	(x,	1);
	MakeComm	(0X804B99D,	"netshort");
	MakeCode	(x=0X804B9A8);
	OpStkvar	(x,	1);
	MakeCode	(x=0X804B9B1);
	OpStkvar	(x,	1);
	MakeComm	(0X804B9BA,	"n");
	MakeComm	(0X804B9BE,	"buf");
	MakeComm	(0X804B9C2,	"fd");
	MakeCode	(x=0X804B9CA);
	OpStkvar	(x,	0);
	MakeComm	(0X804B9D0,	"timer");
	MakeCode	(x=0X804B9DC);
	OpStkvar	(x,	1);
	MakeCode	(x=0X804B9E5);
	OpStkvar	(x,	0);
	MakeCode	(x=0X804B9EE);
	OpStkvar	(x,	1);
	MakeComm	(0X804B9FB,	"netshort");
	MakeCode	(x=0X804BA06);
	OpStkvar	(x,	1);
	MakeCode	(x=0X804BA12);
	OpStkvar	(x,	1);
	MakeComm	(0X804BA1B,	"fd");
	MakeCode	(x=0X804BA23);
	OpStkvar	(x,	1);
	MakeComm	(0X804BA2B,	"sig");
	MakeComm	(0X804BA33,	"pid");
	MakeCode	(x=0X804BA3B);
	OpStkvar	(x,	1);
	MakeCode	(x=0X804BA4E);
	OpStkvar	(x,	1);
	MakeComm	(0X804BA5B,	"netshort");
	MakeComm	(0X804BA6D,	"n");
	MakeCode	(x=0X804BA75);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X804BA7D);
	OpStkvar	(x,	1);
	MakeComm	(0X804BA83,	"s1");
	MakeComm	(0X804BA93,	"size");
	MakeComm	(0X804BA9B,	"nmemb");
	MakeCode	(x=0X804BAA7);
	OpStkvar	(x,	0);
	MakeCode	(x=0X804BAAD);
	OpStkvar	(x,	0);
	MakeCode	(x=0X804BABA);
	OpStkvar	(x,	1);
	MakeCode	(x=0X804BAC5);
	OpStkvar	(x,	1);
	MakeCode	(x=0X804BAE4);
	OpStkvar	(x,	1);
	MakeCode	(x=0X804BAEF);
	OpStkvar	(x,	1);
	MakeCode	(x=0X804BB0E);
	OpStkvar	(x,	1);
	MakeCode	(x=0X804BB14);
	OpStkvar	(x,	1);
	MakeCode	(x=0X804BB33);
	OpStkvar	(x,	1);
	MakeComm	(0X804BB3F,	"netshort");
	MakeCode	(x=0X804BB47);
	OpStkvar	(x,	1);
	MakeCode	(x=0X804BB51);
	OpStkvar	(x,	1);
	MakeComm	(0X804BB5E,	"netshort");
	MakeCode	(x=0X804BB66);
	OpStkvar	(x,	1);
	MakeCode	(x=0X804BB77);
	OpHex		(x,	1);
	MakeCode	(x=0X804BB7C);
	OpHex		(x,	1);
	MakeCode	(x=0X804BB80);
	OpStkvar	(x,	1);
	MakeCode	(x=0X804BB89);
	OpStkvar	(x,	1);
	MakeCode	(x=0X804BB92);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X804BB97);
	OpStkvar	(x,	1);
	MakeComm	(0X804BB9E,	"format");
	MakeComm	(0X804BBA2,	"maxlen");
	MakeComm	(0X804BBAA,	"s");
	MakeCode	(x=0X804BBB2);
	OpStkvar	(x,	1);
	MakeCode	(x=0X804BBB5);
	OpStkvar	(x,	0);
	MakeCode	(x=0X804BBC6);
	OpStkvar	(x,	1);
	MakeCode	(x=0X804BBD7);
	OpStkvar	(x,	1);
	MakeCode	(x=0X804BBE5);
	OpStkvar	(x,	1);
	MakeCode	(x=0X804BBF2);
	OpStkvar	(x,	1);
	MakeCode	(x=0X804BBF5);
	OpStkvar	(x,	0);
	MakeCode	(x=0X804BC06);
	OpStkvar	(x,	1);
	MakeCode	(x=0X804BC1B);
	OpStkvar	(x,	1);
	MakeComm	(0X804BC21,	"ptr");
	MakeCode	(x=0X804BC2B);
	OpStkvar	(x,	1);
	MakeComm	(0X804BC35,	"timer");
	MakeCode	(x=0X804BC41);
	OpStkvar	(x,	1);
	MakeCode	(x=0X804BC4A);
	OpStkvar	(x,	1);
	MakeCode	(x=0X804BC5C);
	OpStkvar	(x,	1);
	MakeComm	(0X804BC62,	"ptr");
	MakeCode	(0X804BC6D);
	MakeCode	(0X804BC70);
	MakeCode	(0X804BC73);
	MakeCode	(0X804BC76);
	MakeCode	(0X804BC79);
	MakeCode	(0X804BC7C);
	MakeCode	(0X804BC7F);
	MakeCode	(0X804BC82);
	MakeCode	(0X804BC85);
	MakeCode	(0X804BC88);
	MakeCode	(x=0X804BC89);
	OpStkvar	(x,	1);
	MakeCode	(x=0X804BC9A);
	OpHex		(x,	1);
	MakeCode	(0X804BCA5);
	MakeName	(0X804BCA5,	"cleanup_frag_state_table");
	MakeCode	(x=0X804BCA9);
	OpHex		(x,	1);
	MakeComm	(0X804BCAC,	"timer");
	MakeCode	(x=0X804BCC9);
	OpStkvar	(x,	0);
	MakeCode	(x=0X804BCCE);
	OpStkvar	(x,	1);
	MakeComm	(0X804BCD4,	"timer");
	MakeCode	(x=0X804BCE7);
	OpStkvar	(x,	1);
	MakeCode	(x=0X804BCED);
	OpStkvar	(x,	0);
	MakeCode	(x=0X804BCF0);
	OpStkvar	(x,	1);
	MakeComm	(0X804BCF6,	"ptr");
	MakeCode	(x=0X804BCFE);
	OpStkvar	(x,	1);
	MakeCode	(x=0X804BD09);
	OpStkvar	(x,	1);
	MakeCode	(x=0X804BD0C);
	OpStkvar	(x,	0);
	MakeCode	(x=0X804BD11);
	OpStkvar	(x,	1);
	MakeCode	(x=0X804BD17);
	OpStkvar	(x,	0);
	MakeCode	(x=0X804BD1A);
	OpStkvar	(x,	0);
	MakeComm	(0X804BD20,	"timer");
	MakeCode	(0X804BD34);
	MakeCode	(x=0X804BD35);
	OpHex		(x,	1);
	MakeCode	(0X804BD3B);
	MakeName	(0X804BD3B,	"main_loop");
	MakeCode	(x=0X804BD40);
	OpHex		(x,	1);
	MakeCode	(x=0X804BD4C);
	OpStkvar	(x,	0);
	MakeCode	(x=0X804BD51);
	OpStkvar	(x,	0);
	MakeCode	(x=0X804BD5B);
	OpStkvar	(x,	1);
	MakeCode	(0X804BD78);
	MakeCode	(x=0X804BD7D);
	OpStkvar	(x,	0);
	MakeCode	(x=0X804BDA2);
	OpStkvar	(x,	1);
	MakeComm	(0X804BDAC,	"format");
	MakeComm	(0X804BDB0,	"stream");
	MakeCode	(x=0X804BDB8);
	OpStkvar	(x,	1);
	MakeCode	(x=0X804BDD5);
	OpStkvar	(x,	1);
	MakeCode	(x=0X804BDDB);
	OpStkvar	(x,	0);
	MakeCode	(x=0X804BDE1);
	OpStkvar	(x,	1);
	MakeComm	(0X804BDEE,	"netshort");
	MakeCode	(x=0X804BDFC);
	OpStkvar	(x,	1);
	MakeCode	(x=0X804BE11);
	OpStkvar	(x,	1);
	MakeCode	(x=0X804BE1A);
	OpHex		(x,	1);
	MakeCode	(x=0X804BE2A);
	OpStkvar	(x,	1);
	MakeComm	(0X804BE37,	"netshort");
	MakeCode	(x=0X804BE5B);
	OpStkvar	(x,	1);
	MakeComm	(0X804BE65,	"format");
	MakeComm	(0X804BE69,	"stream");
	MakeCode	(x=0X804BE71);
	OpStkvar	(x,	1);
	MakeCode	(x=0X804BE8E);
	OpStkvar	(x,	1);
	MakeComm	(0X804BE97,	"n");
	MakeComm	(0X804BE9F,	"s2");
	MakeComm	(0X804BEA3,	"s1");
	MakeCode	(x=0X804BEA3);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeComm	(0X804BECF,	"format");
	MakeComm	(0X804BED3,	"stream");
	MakeCode	(x=0X804BEDB);
	OpStkvar	(x,	1);
	MakeCode	(x=0X804BEF8);
	OpStkvar	(x,	1);
	MakeCode	(x=0X804BF02);
	OpEnumEx		(x,	1,	GetEnum("$9C5D24A798A79904BCA8E9BE0F0E493F"),0);
	MakeCode	(x=0X804BF06);
	OpStkvar	(x,	1);
	MakeCode	(x=0X804BF0D);
	OpStkvar	(x,	1);
	MakeCode	(x=0X804BF17);
	OpStkvar	(x,	1);
	MakeCode	(x=0X804BF27);
	OpStkvar	(x,	1);
	MakeCode	(x=0X804BF35);
	OpStkvar	(x,	0);
	MakeCode	(x=0X804BF3E);
	OpStkvar	(x,	1);
	MakeCode	(x=0X804BF4B);
	OpStkvar	(x,	1);
	MakeCode	(x=0X804BF5C);
	OpStkvar	(x,	1);
	MakeCode	(x=0X804BF63);
	OpStkvar	(x,	1);
	MakeCode	(x=0X804BF73);
	OpStkvar	(x,	1);
	MakeCode	(x=0X804BF80);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeComm	(0X804BF89,	"format");
	MakeCode	(x=0X804BF91);
	OpStkvar	(x,	1);
	MakeCode	(x=0X804BFA9);
	OpStkvar	(x,	1);
	MakeCode	(x=0X804BFB4);
	OpStkvar	(x,	1);
	MakeComm	(0X804BFBA,	"addr_len");
	MakeCode	(x=0X804BFBE);
	OpStkvar	(x,	1);
	MakeComm	(0X804BFC1,	"addr");
	MakeComm	(0X804BFC5,	"flags");
	MakeComm	(0X804BFCD,	"n");
	MakeComm	(0X804BFD5,	"buf");
	MakeComm	(0X804BFD9,	"fd");
	MakeCode	(x=0X804BFE1);
	OpStkvar	(x,	0);
	MakeCode	(x=0X804BFE7);
	OpStkvar	(x,	0);
	MakeCode	(x=0X804BFF4);
	OpStkvar	(x,	1);
	MakeCode	(x=0X804C005);
	OpHex		(x,	1);
	MakeCode	(0X804C00F);
	MakeName	(0X804C00F,	"main");
	MakeCode	(x=0X804C015);
	OpHex		(x,	1);
	MakeCode	(x=0X804C018);
	OpHex		(x,	1);
	MakeCode	(x=0X804C01E);
	OpStkvar	(x,	1);
	MakeComm	(0X804C05E,	"timer");
	MakeComm	(0X804C06F,	"timer");
	MakeComm	(0X804C080,	"seed");
	MakeComm	(0X804C08C,	"handler");
	MakeComm	(0X804C094,	"sig");
	MakeComm	(0X804C0A0,	"handler");
	MakeComm	(0X804C0A8,	"sig");
	MakeCode	(x=0X804C0B4);
	OpStkvar	(x,	0);
	MakeCode	(x=0X804C0CA);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(0X804C0D8);
	MakeCode	(x=0X804C0E0);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X804C1D2);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeComm	(0X804C259,	"format");
	MakeComm	(0X804C261,	"stream");
	MakeComm	(0X804C272,	"status");
	MakeCode	(x=0X804C27E);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X804C29F);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeComm	(0X804C2A4,	"s");
	MakeComm	(0X804C2A8,	"n");
	MakeComm	(0X804C2B0,	"size");
	MakeComm	(0X804C2B8,	"ptr");
	MakeCode	(0X804C2D5);
	MakeArray	(0X804C2DD,	0X3);
	MakeCode	(0X804C2E0);
	MakeCode	(x=0X804C2EF);
	OpHex		(x,	1);
	MakeCode	(x=0X804C2F2);
	OpStkvar	(x,	1);
	MakeCode	(x=0X804C2F6);
	OpOff		(x,	1,	0X804DFF4);
	OpOff		(x,	129,	0X804DFF4);
	MakeCode	(x=0X804C301);
	OpOff		(x,	1,	0X804DFF4);
	OpOff		(x,	129,	0X804DFF4);
	MakeCode	(x=0X804C309);
	OpHex		(x,	1);
	MakeCode	(x=0X804C318);
	OpStkvar	(x,	1);
	MakeCode	(x=0X804C31C);
	OpStkvar	(x,	0);
	MakeCode	(x=0X804C31F);
	OpStkvar	(x,	0);
	MakeCode	(x=0X804C323);
	OpStkvar	(x,	1);
	MakeCode	(x=0X804C327);
	OpStkvar	(x,	0);
	MakeCode	(x=0X804C32B);
	OpOff		(x,	0,	0X804DFF4);
	OpOff		(x,	128,	0X804DFF4);
	MakeCode	(x=0X804C339);
	OpHex		(x,	1);
	MakeCode	(0X804C341);
	MakeArray	(0X804C343,	0XD);
	MakeCode	(0X804C350);
	MakeName	(0X804C350,	"nullsub_1");
	MakeCode	(x=0X804C352);
	OpStkvar	(x,	1);
	MakeArray	(0X804C356,	0XA);
	MakeCode	(0X804C360);
	MakeCode	(x=0X804C364);
	OpHex		(x,	1);
	MakeCode	(x=0X804C371);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X804C384);
	OpHex		(x,	1);
	MakeArray	(0X804C38A,	0X2);
	MakeCode	(0X804C38C);
	MakeName	(0X804C38C,	".term_proc");
	MakeCode	(x=0X804C38D);
	OpHex		(x,	1);
	MakeCode	(x=0X804C3A1);
	OpHex		(x,	1);
	MakeName	(0X804C3AC,	"_IO_stdin_used");
	MakeStr		(0X804C3B0,	0X804C3DE);
	MakeName	(0X804C3B0,	"aUnableToOpenSo");
	MakeStr		(0X804C3DE,	0X804C3EC);
	MakeName	(0X804C3DE,	"aIoctlFailed");
	MakeStr		(0X804C3EC,	0X804C409);
	MakeName	(0X804C3EC,	"aFragementIsnTL");
	MakeStr		(0X804C409,	0X804C41E);
	MakeName	(0X804C409,	"aNotAUdpFrageme");
	MakeStr		(0X804C41E,	0X804C433);
	MakeName	(0X804C41E,	"aOffsetDMoreD");
	MakeStr		(0X804C434,	0X804C453);
	MakeName	(0X804C434,	"aFailedToSendTo");
	MakeStr		(0X804C453,	0X804C467);
	MakeName	(0X804C453,	"aRemovingOldChi");
	MakeStr		(0X804C467,	0X804C479);
	MakeName	(0X804C467,	"aWrongIp6Length");
	MakeStr		(0X804C479,	0X804C489);
	MakeName	(0X804C479,	"aWrongUdpPort");
	MakeStr		(0X804C489,	0X804C4A5);
	MakeName	(0X804C489,	"aWrongUdpLength");
	MakeStr		(0X804C4A5,	0X804C4B7);
	MakeName	(0X804C4A5,	"aSendDToChild");
	MakeStr		(0X804C4B7,	0X804C4C5);
	MakeName	(0X804C4B7,	"aRemoveChild");
	MakeStr		(0X804C4C5,	0X804C4E3);
	MakeName	(0X804C4C5,	"aChildCreationC");
	MakeStr		(0X804C4E3,	0X804C4FA);
	MakeName	(0X804C4E3,	"aInvalidClientS");
	MakeArray	(0X804C4FA,	0X2);
	MakeStr		(0X804C4FC,	0X804C526);
	MakeName	(0X804C4FC,	"aInvalidPacketL");
	MakeArray	(0X804C526,	0X2);
	MakeStr		(0X804C528,	0X804C558);
	MakeName	(0X804C528,	"aInvalidPacke_0");
	MakeStr		(0X804C558,	0X804C56A);
	MakeName	(0X804C558,	"aInvalidDstAddr");
	MakeStr		(0X804C56A,	0X804C579);
	MakeName	(0X804C56A,	"aDone___byebye");
	MakeStr		(0X804C579,	0X804C58E);
	MakeName	(0X804C579,	"aRemovingIdleCh");
	MakeStr		(0X804C58E,	0X804C59F);
	MakeName	(0X804C58E,	"s");
	MakeStr		(0X804C59F,	0X804C5B0);
	MakeName	(0X804C59F,	"aSetresuidFaile");
	MakeStr		(0X804C5B0,	0X804C5BE);
	MakeName	(0X804C5B0,	"aSetgidFailed");
	MakeStr		(0X804C5BE,	0X804C5CD);
	MakeName	(0X804C5BE,	"aSetegidFailed");
	MakeStr		(0X804C5CD,	0X804C5DB);
	MakeName	(0X804C5CD,	"aSetuidFailed");
	MakeStr		(0X804C5DB,	0X804C5EA);
	MakeName	(0X804C5DB,	"aSeteuidFailed");
	MakeStr		(0X804C5EA,	0X804C5F7);
	MakeName	(0X804C5EA,	"aChdirFailed");
	MakeStr		(0X804C5F7,	0X804C5FA);
	MakeName	(0X804C5F7,	"format");
	MakeStr		(0X804C5FA,	0X804C609);
	MakeName	(0X804C5FA,	"aSocketFailed");
	MakeStr		(0X804C609,	0X804C610);
	MakeName	(0X804C609,	"aSendto");
	MakeStr		(0X804C610,	0X804C615);
	MakeName	(0X804C610,	"aHelp");
	MakeArray	(0X804C615,	0X3);
	MakeStr		(0X804C618,	0X804C651);
	MakeName	(0X804C618,	"aAvailableComma");
	MakeStr		(0X804C651,	0X804C658);
	MakeName	(0X804C651,	"aUname");
	MakeStr		(0X804C658,	0X804C65A);
	MakeName	(0X804C658,	"modes");
	MakeStr		(0X804C65A,	0X804C663);
	MakeName	(0X804C65A,	"aServer");
	MakeStr		(0X804C663,	0X804C669);
	MakeName	(0X804C663,	"command");
	MakeStr		(0X804C669,	0X804C66D);
	MakeName	(0X804C669,	"aLs");
	MakeStr		(0X804C66D,	0X804C670);
	MakeName	(0X804C66D,	"aLs_0");
	MakeStr		(0X804C670,	0X804C675);
	MakeName	(0X804C670,	"aCat");
	MakeStr		(0X804C675,	0X804C68E);
	MakeName	(0X804C675,	"aYeahRight___Se");
	MakeStr		(0X804C68E,	0X804C692);
	MakeName	(0X804C68E,	"aPwd");
	MakeStr		(0X804C692,	0X804C697);
	MakeName	(0X804C692,	"aExit");
	MakeStr		(0X804C697,	0X804C69C);
	MakeName	(0X804C697,	"aBye");
	MakeStr		(0X804C69C,	0X804C6A2);
	MakeName	(0X804C69C,	"aEcho");
	MakeStr		(0X804C6A2,	0X804C6BC);
	MakeName	(0X804C6A2,	"aInvalidCommand");
	MakeStr		(0X804C6BC,	0X804C6C2);
	MakeName	(0X804C6BC,	"aAckD");
	MakeStr		(0X804C6C2,	0X804C6CC);
	MakeName	(0X804C6C2,	"aServer_0");
	MakeStr		(0X804C6CC,	0X804C6D0);
	MakeName	(0X804C6CC,	"s2");
	MakeStr		(0X804C6D0,	0X804C6D9);
	MakeName	(0X804C6D0,	"aSynackD");
	MakeStr		(0X804C6D9,	0X804C6EF);
	MakeName	(0X804C6D9,	"aInvalidProtoco");
	MakeStr		(0X804C6EF,	0X804C6F4);
	MakeName	(0X804C6EF,	"aEth0");
	MakeStr		(0X804C6F4,	0X804C746);
	MakeName	(0X804C6F4,	"aMyAddr02x02x02");
	MakeStr		(0X804C746,	0X804C74E);
	MakeName	(0X804C746,	"name");
	MakeDword	(0X804DF14);
	MakeDword	(0X804DF1C);
	MakeDword	(0X804DF24);
	MakeDword	(x=0X804DFF0);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeName	(0X804DFF0,	"__gmon_start___ptr");
	MakeArray	(0X804DFF4,	0XC);
	MakeDword	(x=0X804E000);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X804E004);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X804E008);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X804E00C);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X804E010);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X804E014);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X804E018);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X804E01C);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X804E020);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X804E024);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X804E028);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X804E02C);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X804E030);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X804E034);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X804E038);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X804E03C);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X804E040);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X804E044);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X804E048);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X804E04C);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X804E050);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X804E054);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X804E058);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X804E05C);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X804E060);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X804E064);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X804E068);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X804E06C);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X804E070);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X804E074);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X804E078);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X804E07C);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X804E080);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X804E084);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X804E088);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X804E08C);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X804E090);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X804E094);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X804E098);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X804E09C);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X804E0A0);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X804E0A4);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X804E0A8);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X804E0AC);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X804E0B0);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X804E0B4);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X804E0B8);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X804E0BC);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X804E0C0);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X804E0C4);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X804E0C8);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X804E0CC);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X804E0D0);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X804E0D4);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X804E0D8);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeArray	(0X804E0E0,	0X20);
	MakeDword	(x=0X804E100);
	MakeArray	(x,	0X13);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeName	(0X804E100,	"errors");
	MakeComm	(0X804E14C,	"Copy of shared data");
	MakeDword	(0X804E14C);
	MakeName	(0X804E14C,	"stderr");
	MakeByte	(0X804E150);
	MakeArray	(0X804E151,	0X3);
	MakeDword	(0X804E154);
	MakeDword	(0X804E158);
	MakeName	(0X804E158,	"debug");
	MakeDword	(0X804E15C);
	MakeName	(0X804E15C,	"fd");
	MakeDword	(0X804E160);
	MakeName	(0X804E160,	"fragments_list");
	MakeDword	(0X804E164);
	MakeName	(0X804E164,	"time2");
	MakeWord	(0X804E168);
	MakeName	(0X804E168,	"short0");
	MakeArray	(0X804E16A,	0X2);
	MakeDword	(0X804E16C);
	MakeName	(0X804E16C,	"time1");
	MakeDword	(0X804E170);
	MakeName	(0X804E170,	"state_table_head");
	MakeByte	(0X804E174);
	MakeArray	(0X804E174,	0X10);
	MakeName	(0X804E174,	"ipv6addr");
	MakeCode	(0X804E184);
	MakeName	(0X804E184,	"getpwnam");
	MakeCode	(0X804E188);
	MakeName	(0X804E188,	"setresuid");
	MakeCode	(0X804E18C);
	MakeName	(0X804E18C,	"read");
	MakeCode	(0X804E190);
	MakeName	(0X804E190,	"printf");
	MakeCode	(0X804E194);
	MakeName	(0X804E194,	"free");
	MakeCode	(0X804E198);
	MakeName	(0X804E198,	"memcpy");
	MakeCode	(0X804E19C);
	MakeName	(0X804E19C,	"time");
	MakeCode	(0X804E1A0);
	MakeName	(0X804E1A0,	"signal");
	MakeCode	(0X804E1A4);
	MakeName	(0X804E1A4,	"memcmp");
	MakeCode	(0X804E1A8);
	MakeName	(0X804E1A8,	"chdir");
	MakeCode	(0X804E1AC);
	MakeName	(0X804E1AC,	"recvfrom");
	MakeCode	(0X804E1B0);
	MakeName	(0X804E1B0,	"popen");
	MakeCode	(0X804E1B4);
	MakeName	(0X804E1B4,	"__stack_chk_fail");
	MakeCode	(0X804E1B8);
	MakeName	(0X804E1B8,	"getuid");
	MakeCode	(0X804E1BC);
	MakeName	(0X804E1BC,	"initgroups");
	MakeCode	(0X804E1C0);
	MakeName	(0X804E1C0,	"htons");
	MakeCode	(0X804E1C4);
	MakeName	(0X804E1C4,	"geteuid");
	MakeCode	(0X804E1C8);
	MakeName	(0X804E1C8,	"getegid");
	MakeCode	(0X804E1CC);
	MakeName	(0X804E1CC,	"ioctl");
	MakeCode	(0X804E1D0);
	MakeName	(0X804E1D0,	"seteuid");
	MakeCode	(0X804E1D4);
	MakeName	(0X804E1D4,	"perror");
	MakeCode	(0X804E1D8);
	MakeName	(0X804E1D8,	"fwrite");
	MakeCode	(0X804E1DC);
	MakeName	(0X804E1DC,	"waitpid");
	MakeCode	(0X804E1E0);
	MakeName	(0X804E1E0,	"fread");
	MakeCode	(0X804E1E4);
	MakeName	(0X804E1E4,	"setgid");
	MakeCode	(0X804E1E8);
	MakeName	(0X804E1E8,	"puts");
	MakeCode	(0X804E1EC);
	MakeName	(0X804E1EC,	"ntohl");
	MakeCode	(0X804E1F0);
	MakeName	(0X804E1F0,	"exit");
	MakeCode	(0X804E1F4);
	MakeName	(0X804E1F4,	"kill");
	MakeCode	(0X804E1F8);
	MakeName	(0X804E1F8,	"pclose");
	MakeCode	(0X804E1FC);
	MakeName	(0X804E1FC,	"srand");
	MakeCode	(0X804E200);
	MakeName	(0X804E200,	"strchr");
	MakeCode	(0X804E204);
	MakeName	(0X804E204,	"__libc_start_main");
	MakeCode	(0X804E208);
	MakeName	(0X804E208,	"fprintf");
	MakeCode	(0X804E20C);
	MakeName	(0X804E20C,	"write");
	MakeCode	(0X804E210);
	MakeName	(0X804E210,	"bind");
	MakeCode	(0X804E214);
	MakeName	(0X804E214,	"getgid");
	MakeCode	(0X804E218);
	MakeName	(0X804E218,	"memset");
	MakeCode	(0X804E21C);
	MakeName	(0X804E21C,	"snprintf");
	MakeCode	(0X804E220);
	MakeName	(0X804E220,	"pipe");
	MakeCode	(0X804E224);
	MakeName	(0X804E224,	"rand");
	MakeCode	(0X804E228);
	MakeName	(0X804E228,	"sendto");
	MakeCode	(0X804E22C);
	MakeName	(0X804E22C,	"setegid");
	MakeCode	(0X804E230);
	MakeName	(0X804E230,	"fork");
	MakeCode	(0X804E234);
	MakeName	(0X804E234,	"htonl");
	MakeCode	(0X804E238);
	MakeName	(0X804E238,	"ntohs");
	MakeCode	(0X804E23C);
	MakeName	(0X804E23C,	"setuid");
	MakeCode	(0X804E240);
	MakeName	(0X804E240,	"sprintf");
	MakeCode	(0X804E244);
	MakeName	(0X804E244,	"socket");
	MakeCode	(0X804E248);
	MakeName	(0X804E248,	"setresgid");
	MakeCode	(0X804E24C);
	MakeName	(0X804E24C,	"inet_addr");
	MakeCode	(0X804E250);
	MakeName	(0X804E250,	"strncmp");
	MakeCode	(0X804E254);
	MakeName	(0X804E254,	"close");
	MakeCode	(0X804E258);
	MakeName	(0X804E258,	"calloc");
	MakeCode	(0X804E25C);
	MakeName	(0X804E25C,	"__gmon_start__");
}

static Functions_0(void) {

	MakeFunction    (0X80489A8,0X80489D6);
	SetFunctionFlags(0X80489A8,0x4400);
	MakeFrame(0X80489A8, 0XC, 0, 0);
	MakeFunction    (0X80489F0,0X80489F6);
	SetFunctionFlags(0X80489F0,0x44c0);
	SetType(0X80489F0, "struct passwd *getpwnam(const char *name);");
	MakeFunction    (0X8048A00,0X8048A06);
	SetFunctionFlags(0X8048A00,0x4c0);
	MakeFunction    (0X8048A10,0X8048A16);
	SetFunctionFlags(0X8048A10,0x44c0);
	SetType(0X8048A10, "ssize_t read(int fd, void *buf, size_t nbytes);");
	MakeFunction    (0X8048A20,0X8048A26);
	SetFunctionFlags(0X8048A20,0x44c0);
	SetType(0X8048A20, "int printf(const char *format, ...);");
	MakeFunction    (0X8048A30,0X8048A36);
	SetFunctionFlags(0X8048A30,0x44c0);
	SetType(0X8048A30, "void free(void *ptr);");
	MakeFunction    (0X8048A40,0X8048A46);
	SetFunctionFlags(0X8048A40,0x44c0);
	SetType(0X8048A40, "void *memcpy(void *dest, const void *src, size_t n);");
	MakeFunction    (0X8048A50,0X8048A56);
	SetFunctionFlags(0X8048A50,0x44c0);
	SetType(0X8048A50, "time_t time(time_t *timer);");
	MakeFunction    (0X8048A60,0X8048A66);
	SetFunctionFlags(0X8048A60,0x44c0);
	SetType(0X8048A60, "__sighandler_t signal(int sig, __sighandler_t handler);");
	MakeFunction    (0X8048A70,0X8048A76);
	SetFunctionFlags(0X8048A70,0x44c0);
	SetType(0X8048A70, "int memcmp(const void *s1, const void *s2, size_t n);");
	MakeFunction    (0X8048A80,0X8048A86);
	SetFunctionFlags(0X8048A80,0x44c0);
	SetType(0X8048A80, "int chdir(const char *path);");
	MakeFunction    (0X8048A90,0X8048A96);
	SetFunctionFlags(0X8048A90,0x44c0);
	SetType(0X8048A90, "ssize_t recvfrom(int fd, void *buf, size_t n, int flags, struct sockaddr *addr, socklen_t *addr_len);");
	MakeFunction    (0X8048AA0,0X8048AA6);
	SetFunctionFlags(0X8048AA0,0x4480);
	SetType(0X8048AA0, "FILE *popen(const char *command, const char *modes);");
	MakeFunction    (0X8048AB0,0X8048AB6);
	SetFunctionFlags(0X8048AB0,0x4c1);
	MakeFunction    (0X8048AC0,0X8048AC6);
	SetFunctionFlags(0X8048AC0,0x44c0);
	SetType(0X8048AC0, "__uid_t getuid(void);");
	MakeFunction    (0X8048AD0,0X8048AD6);
	SetFunctionFlags(0X8048AD0,0x44c0);
	SetType(0X8048AD0, "int initgroups(const char *, __gid_t group);");
	MakeFunction    (0X8048AE0,0X8048AE6);
	SetFunctionFlags(0X8048AE0,0x44c0);
	SetType(0X8048AE0, "uint16_t htons(uint16_t hostshort);");
	MakeFunction    (0X8048AF0,0X8048AF6);
	SetFunctionFlags(0X8048AF0,0x44c0);
	SetType(0X8048AF0, "__uid_t geteuid(void);");
	MakeFunction    (0X8048B00,0X8048B06);
	SetFunctionFlags(0X8048B00,0x44c0);
	SetType(0X8048B00, "__gid_t getegid(void);");
	MakeFunction    (0X8048B10,0X8048B16);
	SetFunctionFlags(0X8048B10,0x44c0);
	SetType(0X8048B10, "int ioctl(int fd, unsigned __int32 request, ...);");
	MakeFunction    (0X8048B20,0X8048B26);
	SetFunctionFlags(0X8048B20,0x44c0);
	SetType(0X8048B20, "int seteuid(__uid_t uid);");
	MakeFunction    (0X8048B30,0X8048B36);
	SetFunctionFlags(0X8048B30,0x44c0);
	SetType(0X8048B30, "void perror(const char *s);");
	MakeFunction    (0X8048B40,0X8048B46);
	SetFunctionFlags(0X8048B40,0x44c0);
	SetType(0X8048B40, "size_t fwrite(const void *ptr, size_t size, size_t n, FILE *s);");
	MakeFunction    (0X8048B50,0X8048B56);
	SetFunctionFlags(0X8048B50,0x44c0);
	SetType(0X8048B50, "__pid_t waitpid(__pid_t pid, int *stat_loc, int options);");
	MakeFunction    (0X8048B60,0X8048B66);
	SetFunctionFlags(0X8048B60,0x44c0);
	SetType(0X8048B60, "size_t fread(void *ptr, size_t size, size_t n, FILE *stream);");
	MakeFunction    (0X8048B70,0X8048B76);
	SetFunctionFlags(0X8048B70,0x44c0);
	SetType(0X8048B70, "int setgid(__gid_t gid);");
	MakeFunction    (0X8048B80,0X8048B86);
	SetFunctionFlags(0X8048B80,0x44c0);
	SetType(0X8048B80, "int puts(const char *s);");
	MakeFunction    (0X8048B90,0X8048B96);
	SetFunctionFlags(0X8048B90,0x44c0);
	SetType(0X8048B90, "uint32_t ntohl(uint32_t netlong);");
	MakeFunction    (0X8048BA0,0X8048BA6);
	SetFunctionFlags(0X8048BA0,0x4c0);
	MakeFunction    (0X8048BB0,0X8048BB6);
	SetFunctionFlags(0X8048BB0,0x44c1);
	SetType(0X8048BB0, "void exit(int status);");
	MakeFunction    (0X8048BC0,0X8048BC6);
	SetFunctionFlags(0X8048BC0,0x44c0);
	SetType(0X8048BC0, "int kill(__pid_t pid, int sig);");
	MakeFunction    (0X8048BD0,0X8048BD6);
	SetFunctionFlags(0X8048BD0,0x44c0);
	SetType(0X8048BD0, "int pclose(FILE *stream);");
	MakeFunction    (0X8048BE0,0X8048BE6);
	SetFunctionFlags(0X8048BE0,0x44c0);
	SetType(0X8048BE0, "void srand(unsigned int seed);");
	MakeFunction    (0X8048BF0,0X8048BF6);
	SetFunctionFlags(0X8048BF0,0x44c0);
	SetType(0X8048BF0, "char *strchr(const char *s, int c);");
	MakeFunction    (0X8048C00,0X8048C06);
	SetFunctionFlags(0X8048C00,0x4c0);
	MakeFunction    (0X8048C10,0X8048C16);
	SetFunctionFlags(0X8048C10,0x44c0);
	SetType(0X8048C10, "int fprintf(FILE *stream, const char *format, ...);");
	MakeFunction    (0X8048C20,0X8048C26);
	SetFunctionFlags(0X8048C20,0x44c0);
	SetType(0X8048C20, "ssize_t write(int fd, const void *buf, size_t n);");
	MakeFunction    (0X8048C30,0X8048C36);
	SetFunctionFlags(0X8048C30,0x44c0);
	SetType(0X8048C30, "int bind(int fd, const struct sockaddr *addr, socklen_t len);");
	MakeFunction    (0X8048C40,0X8048C46);
	SetFunctionFlags(0X8048C40,0x44c0);
	SetType(0X8048C40, "__gid_t getgid(void);");
	MakeFunction    (0X8048C50,0X8048C56);
	SetFunctionFlags(0X8048C50,0x44c0);
	SetType(0X8048C50, "void *memset(void *s, int c, size_t n);");
	MakeFunction    (0X8048C60,0X8048C66);
	SetFunctionFlags(0X8048C60,0x44c0);
	SetType(0X8048C60, "int snprintf(char *s, size_t maxlen, const char *format, ...);");
	MakeFunction    (0X8048C70,0X8048C76);
	SetFunctionFlags(0X8048C70,0x44c0);
	SetType(0X8048C70, "int pipe(int *pipedes);");
	MakeFunction    (0X8048C80,0X8048C86);
	SetFunctionFlags(0X8048C80,0x44c0);
	SetType(0X8048C80, "int rand(void);");
	MakeFunction    (0X8048C90,0X8048C96);
	SetFunctionFlags(0X8048C90,0x44c0);
	SetType(0X8048C90, "ssize_t sendto(int fd, const void *buf, size_t n, int flags, const struct sockaddr *addr, socklen_t addr_len);");
	MakeFunction    (0X8048CA0,0X8048CA6);
	SetFunctionFlags(0X8048CA0,0x44c0);
	SetType(0X8048CA0, "int setegid(__gid_t gid);");
	MakeFunction    (0X8048CB0,0X8048CB6);
	SetFunctionFlags(0X8048CB0,0x44c0);
	SetType(0X8048CB0, "__pid_t fork(void);");
	MakeFunction    (0X8048CC0,0X8048CC6);
	SetFunctionFlags(0X8048CC0,0x44c0);
	SetType(0X8048CC0, "uint32_t htonl(uint32_t hostlong);");
	MakeFunction    (0X8048CD0,0X8048CD6);
	SetFunctionFlags(0X8048CD0,0x4480);
	SetType(0X8048CD0, "uint16_t ntohs(uint16_t netshort);");
	MakeFunction    (0X8048CE0,0X8048CE6);
	SetFunctionFlags(0X8048CE0,0x44c0);
	SetType(0X8048CE0, "int setuid(__uid_t uid);");
	MakeFunction    (0X8048CF0,0X8048CF6);
	SetFunctionFlags(0X8048CF0,0x44c0);
	SetType(0X8048CF0, "int sprintf(char *s, const char *format, ...);");
	MakeFunction    (0X8048D00,0X8048D06);
	SetFunctionFlags(0X8048D00,0x44c0);
	SetType(0X8048D00, "int socket(int domain, int type, int protocol);");
	MakeFunction    (0X8048D10,0X8048D16);
	SetFunctionFlags(0X8048D10,0x4c0);
	MakeFunction    (0X8048D20,0X8048D26);
	SetFunctionFlags(0X8048D20,0x44c0);
	SetType(0X8048D20, "in_addr_t inet_addr(const char *cp);");
	MakeFunction    (0X8048D30,0X8048D36);
	SetFunctionFlags(0X8048D30,0x44c0);
	SetType(0X8048D30, "int strncmp(const char *s1, const char *s2, size_t n);");
	MakeFunction    (0X8048D40,0X8048D46);
	SetFunctionFlags(0X8048D40,0x44c0);
	SetType(0X8048D40, "int close(int fd);");
	MakeFunction    (0X8048D50,0X8048D56);
	SetFunctionFlags(0X8048D50,0x44c0);
	SetType(0X8048D50, "void *calloc(size_t nmemb, size_t size);");
	MakeFunction    (0X8048D60,0X8048D82);
	SetFunctionFlags(0X8048D60,0x401);
	MakeFunction    (0X8048D90,0X8048DE5);
	SetFunctionFlags(0X8048D90,0x4410);
	MakeFrame(0X8048D90, 0X8, 4, 0);
	MakeFunction    (0X8048DF0,0X8048E13);
	SetFunctionFlags(0X8048DF0,0x4410);
	MakeFrame(0X8048DF0, 0X18, 4, 0);
	MakeFunction    (0X8048E14,0X8048E75);
	SetFunctionFlags(0X8048E14,0x4410);
	SetType(0X8048E14, "int __cdecl drop_privs(char *name);");
	MakeFrame(0X8048E14, 0X28, 4, 0);
	MakeLocal(0X8048E14, 0X8048E75, "[bp+0X8]", "name");
	MakeFunction    (0X8048E75,0X8049080);
	SetFunctionFlags(0X8048E75,0x4410);
	MakeFrame(0X8048E75, 0X28, 4, 0);
	MakeLocal(0X8048E75, 0X8049080, "[bp-0X10]", "uid");
	MakeLocal(0X8048E75, 0X8049080, "[bp-0XC]", "gid");
	MakeFunction    (0X8049080,0X804908F);
	SetFunctionFlags(0X8049080,0x4410);
	MakeFrame(0X8049080, 0, 4, 0);
	MakeFunction    (0X804908F,0X8049209);
	SetFunctionFlags(0X804908F,0x4410);
	MakeFrame(0X804908F, 0X38, 4, 0);
	MakeFunction    (0X8049209,0X804943B);
	SetFunctionFlags(0X8049209,0x4410);
	MakeFrame(0X8049209, 0X58, 4, 0);
	MakeLocal(0X8049209, 0X804943B, "[bp-0X40]", "cp");
	MakeLocal(0X8049209, 0X804943B, "[bp-0X30]", "fd");
	MakeLocal(0X8049209, 0X804943B, "[bp-0X2C]", "s");
	MakeFunction    (0X804943B,0X8049534);
	SetFunctionFlags(0X804943B,0x4410);
	MakeFrame(0X804943B, 0X38, 4, 0);
	MakeLocal(0X804943B, 0X8049534, "[bp-0X1C]", "addr");
	MakeFunction    (0X8049534,0X80495CD);
	SetFunctionFlags(0X8049534,0x4410);
	SetType(0X8049534, "struct_frag *__cdecl lookup_ip_fragment_state_table(ip6_frag_packet_with_data *a1);");
	MakeFrame(0X8049534, 0X28, 4, 0);
	MakeFunction    (0X80495CD,0X804969B);
	SetFunctionFlags(0X80495CD,0x4410);
	SetType(0X80495CD, "int __cdecl check_for_percent_n(_DWORD a1, unsigned int a2);");
	MakeFrame(0X80495CD, 0X48, 4, 0);
	MakeLocal(0X80495CD, 0X804969B, "[bp-0X1D]", "s");
	MakeLocal(0X80495CD, 0X804969B, "[bp-0XC]", "cookie");
	MakeFunction    (0X804969B,0X8049B95);
	SetFunctionFlags(0X804969B,0x4410);
	SetType(0X804969B, "int __cdecl hande_fragment(ip6_frag_packet_with_data *a1, signed int a2_frag_size, int addr);");
	MakeFrame(0X804969B, 0X38, 4, 0);
	MakeLocal(0X804969B, 0X8049B95, "[bp-0X20]", "dest");
	MakeLocal(0X804969B, 0X8049B95, "[bp-0X18]", "frag_from_state_machine");
	MakeLocal(0X804969B, 0X8049B95, "[bp-0XE]", "offset");
	MakeLocal(0X804969B, 0X8049B95, "[bp-0XC]", "more_frags_to_come");
	MakeLocal(0X804969B, 0X8049B95, "[bp+0XC]", "a2_frag_size");
	MakeLocal(0X804969B, 0X8049B95, "[bp+0X10]", "addr");
	MakeFunction    (0X8049B95,0X8049C52);
	SetFunctionFlags(0X8049B95,0x4410);
	SetType(0X8049B95, "int __cdecl lookup_packet_in_state_table(void *, char s2, int, int, int, char, int, int, int, int, int);");
	MakeFrame(0X8049B95, 0X38, 4, 0);
	MakeLocal(0X8049B95, 0X8049C52, "[bp+0XC]", "s2");
	MakeFunction    (0X8049C52,0X8049C9A);
	SetFunctionFlags(0X8049C52,0x4410);
	SetType(0X8049C52, "int __cdecl add_to_frag_state_table(struct_frag *a1);");
	MakeFrame(0X8049C52, 0X10, 4, 0);
	MakeFunction    (0X8049C9A,0X8049D19);
	SetFunctionFlags(0X8049C9A,0x4410);
	MakeFrame(0X8049C9A, 0X28, 4, 0);
	MakeLocal(0X8049C9A, 0X8049D19, "[bp-0X10]", "ptr");
	MakeFunction    (0X8049D48,0X8049D90);
	SetFunctionFlags(0X8049D48,0x4410);
	SetType(0X8049D48, "int __cdecl add_to_state_table(struct_ptr *a1);");
	MakeFrame(0X8049D48, 0X10, 4, 0);
	MakeFunction    (0X8049D90,0X8049E0F);
	SetFunctionFlags(0X8049D90,0x4410);
	SetType(0X8049D90, "int __cdecl remove_from_state_table(struct_ptr *a1);");
	MakeFrame(0X8049D90, 0X28, 4, 0);
	MakeLocal(0X8049D90, 0X8049E0F, "[bp-0X10]", "ptr");
	MakeLocal(0X8049D90, 0X8049E0F, "[bp-0XC]", "tail");
	MakeFunction    (0X8049E0F,0X804A569);
	SetFunctionFlags(0X8049E0F,0x4410);
	SetType(0X8049E0F, "size_t __cdecl sendto_0(const void *a1, size_t a2, ptr_type *a3);");
	MakeFrame(0X8049E0F, 0X678, 4, 0);
	MakeLocal(0X8049E0F, 0X804A569, "[bp-0X64C]", "src");
	MakeLocal(0X8049E0F, 0X804A569, "[bp-0X630]", "n");
	MakeLocal(0X8049E0F, 0X804A569, "[bp-0X620]", "buf");
	MakeFunction    (0X804A569,0X804B2B1);
	SetFunctionFlags(0X804A569,0x410);
	SetType(0X804A569, "int __cdecl cmdprocessor(struct_ptr *connection);");
	MakeFrame(0X804A569, 0X12798, 4, 0);
	MakeLocal(0X804A569, 0X804B2B1, "[bp-0X12794]", "c");
	MakeLocal(0X804A569, 0X804B2B1, "[bp-0X12790]", "n");
	MakeLocal(0X804A569, 0X804B2B1, "[bp-0X1277C]", "a3");
	MakeLocal(0X804A569, 0X804B2B1, "[bp-0X12768]", "command");
	MakeLocal(0X804A569, 0X804B2B1, "[bp-0X12764]", "stream");
	MakeLocal(0X804A569, 0X804B2B1, "[bp-0X12760]", "s");
	MakeLocal(0X804A569, 0X804B2B1, "[bp-0X2760]", "ptr");
	MakeLocal(0X804A569, 0X804B2B1, "[bp-0X50]", "lschars");
	MakeLocal(0X804A569, 0X804B2B1, "[bp-0X27]", "unamechars");
	MakeLocal(0X804A569, 0X804B2B1, "[bp-0X1C]", "cookie");
	MakeLocal(0X804A569, 0X804B2B1, "[bp+0X8]", "connection");
	MakeFunction    (0X804B2B1,0X804B45B);
	SetFunctionFlags(0X804B2B1,0x4410);
	MakeFrame(0X804B2B1, 0X28, 4, 0);
	MakeLocal(0X804B2B1, 0X804B45B, "[bp-0X18]", "stat_loc");
	MakeFunction    (0X804B45B,0X804BCA5);
	SetFunctionFlags(0X804B45B,0x4410);
	SetType(0X804B45B, "int __cdecl udp_state_machine(udp_ip63 *packet_, struct sockaddr *addr);");
	MakeFrame(0X804B45B, 0XE8, 4, 0);
	MakeLocal(0X804B45B, 0X804BCA5, "[bp-0XA4]", "pipedes");
	MakeLocal(0X804B45B, 0X804BCA5, "[bp-0X94]", "packet");
	MakeLocal(0X804B45B, 0X804BCA5, "[bp-0X90]", "udphdr");
	MakeLocal(0X804B45B, 0X804BCA5, "[bp-0X8C]", "udp_data");
	MakeLocal(0X804B45B, 0X804BCA5, "[bp-0X88]", "ptr");
	MakeLocal(0X804B45B, 0X804BCA5, "[bp-0X84]", "write_len");
	MakeLocal(0X804B45B, 0X804BCA5, "[bp-0X80]", "s");
	MakeLocal(0X804B45B, 0X804BCA5, "[bp+0X8]", "packet_");
	MakeLocal(0X804B45B, 0X804BCA5, "[bp+0XC]", "addr");
	MakeFunction    (0X804BCA5,0X804BD3B);
	SetFunctionFlags(0X804BCA5,0x4410);
	MakeFrame(0X804BCA5, 0X28, 4, 0);
	MakeFunction    (0X804BD3B,0X804C00F);
	SetFunctionFlags(0X804BD3B,0x4410);
	MakeFrame(0X804BD3B, 0X628, 4, 0);
	MakeLocal(0X804BD3B, 0X804C00F, "[bp-0X608]", "addr_len");
	MakeLocal(0X804BD3B, 0X804C00F, "[bp-0X604]", "size");
	MakeLocal(0X804BD3B, 0X804C00F, "[bp-0X5F8]", "buf");
	MakeLocal(0X804BD3B, 0X804C00F, "[bp-0X1C]", "addr");
	MakeFunction    (0X804C00F,0X804C2DD);
	SetFunctionFlags(0X804C00F,0x4410);
	SetType(0X804C00F, "size_t __cdecl main(int a1, char **a2);");
	MakeFrame(0X804C00F, 0X67C, 4, 0);
	MakeFunction    (0X804C2E0,0X804C341);
	SetFunctionFlags(0X804C2E0,0x4400);
	MakeFrame(0X804C2E0, 0X2C, 0, 0);
	MakeFunction    (0X804C350,0X804C352);
	SetFunctionFlags(0X804C350,0x4440);
	MakeFunction    (0X804C352,0X804C356);
	SetFunctionFlags(0X804C352,0x4400);
	MakeFrame(0X804C352, 0, 0, 0);
	MakeFunction    (0X804C360,0X804C38A);
	SetFunctionFlags(0X804C360,0x4410);
	MakeFrame(0X804C360, 0X8, 4, 0);
	MakeFunction    (0X804C38C,0X804C3A6);
	SetFunctionFlags(0X804C38C,0x4400);
	MakeFrame(0X804C38C, 0XC, 0, 0);
	MakeFunction    (0X804E184,0X804E188);
	SetFunctionFlags(0X804E184,0x4400);
	SetType(0X804E184, "struct passwd *getpwnam(const char *name);");
	MakeFunction    (0X804E188,0X804E18C);
	SetFunctionFlags(0X804E188,0x400);
	MakeFunction    (0X804E18C,0X804E190);
	SetFunctionFlags(0X804E18C,0x4400);
	SetType(0X804E18C, "ssize_t read(int fd, void *buf, size_t nbytes);");
	MakeFunction    (0X804E190,0X804E194);
	SetFunctionFlags(0X804E190,0x4400);
	SetType(0X804E190, "int printf(const char *format, ...);");
	MakeFunction    (0X804E194,0X804E198);
	SetFunctionFlags(0X804E194,0x4400);
	SetType(0X804E194, "void free(void *ptr);");
	MakeFunction    (0X804E198,0X804E19C);
	SetFunctionFlags(0X804E198,0x4400);
	SetType(0X804E198, "void *memcpy(void *dest, const void *src, size_t n);");
	MakeFunction    (0X804E19C,0X804E1A0);
	SetFunctionFlags(0X804E19C,0x4400);
	SetType(0X804E19C, "time_t time(time_t *timer);");
	MakeFunction    (0X804E1A0,0X804E1A4);
	SetFunctionFlags(0X804E1A0,0x4400);
	SetType(0X804E1A0, "__sighandler_t signal(int sig, __sighandler_t handler);");
	MakeFunction    (0X804E1A4,0X804E1A8);
	SetFunctionFlags(0X804E1A4,0x4400);
	SetType(0X804E1A4, "int memcmp(const void *s1, const void *s2, size_t n);");
	MakeFunction    (0X804E1A8,0X804E1AC);
	SetFunctionFlags(0X804E1A8,0x4400);
	SetType(0X804E1A8, "int chdir(const char *path);");
	MakeFunction    (0X804E1AC,0X804E1B0);
	SetFunctionFlags(0X804E1AC,0x4400);
	SetType(0X804E1AC, "ssize_t recvfrom(int fd, void *buf, size_t n, int flags, struct sockaddr *addr, socklen_t *addr_len);");
	MakeFunction    (0X804E1B0,0X804E1B4);
	SetFunctionFlags(0X804E1B0,0x4400);
	SetType(0X804E1B0, "FILE *popen(const char *command, const char *modes);");
	MakeFunction    (0X804E1B4,0X804E1B8);
	SetFunctionFlags(0X804E1B4,0x401);
	MakeFunction    (0X804E1B8,0X804E1BC);
	SetFunctionFlags(0X804E1B8,0x4400);
	SetType(0X804E1B8, "__uid_t getuid(void);");
	MakeFunction    (0X804E1BC,0X804E1C0);
	SetFunctionFlags(0X804E1BC,0x4400);
	SetType(0X804E1BC, "int initgroups(const char *, __gid_t group);");
	MakeFunction    (0X804E1C0,0X804E1C4);
	SetFunctionFlags(0X804E1C0,0x4400);
	SetType(0X804E1C0, "uint16_t htons(uint16_t hostshort);");
	MakeFunction    (0X804E1C4,0X804E1C8);
	SetFunctionFlags(0X804E1C4,0x4400);
	SetType(0X804E1C4, "__uid_t geteuid(void);");
	MakeFunction    (0X804E1C8,0X804E1CC);
	SetFunctionFlags(0X804E1C8,0x4400);
	SetType(0X804E1C8, "__gid_t getegid(void);");
	MakeFunction    (0X804E1CC,0X804E1D0);
	SetFunctionFlags(0X804E1CC,0x4400);
	SetType(0X804E1CC, "int ioctl(int fd, unsigned __int32 request, ...);");
	MakeFunction    (0X804E1D0,0X804E1D4);
	SetFunctionFlags(0X804E1D0,0x4400);
	SetType(0X804E1D0, "int seteuid(__uid_t uid);");
	MakeFunction    (0X804E1D4,0X804E1D8);
	SetFunctionFlags(0X804E1D4,0x4400);
	SetType(0X804E1D4, "void perror(const char *s);");
	MakeFunction    (0X804E1D8,0X804E1DC);
	SetFunctionFlags(0X804E1D8,0x4400);
	SetType(0X804E1D8, "size_t fwrite(const void *ptr, size_t size, size_t n, FILE *s);");
	MakeFunction    (0X804E1DC,0X804E1E0);
	SetFunctionFlags(0X804E1DC,0x4400);
	SetType(0X804E1DC, "__pid_t waitpid(__pid_t pid, int *stat_loc, int options);");
	MakeFunction    (0X804E1E0,0X804E1E4);
	SetFunctionFlags(0X804E1E0,0x4400);
	SetType(0X804E1E0, "size_t fread(void *ptr, size_t size, size_t n, FILE *stream);");
	MakeFunction    (0X804E1E4,0X804E1E8);
	SetFunctionFlags(0X804E1E4,0x4400);
	SetType(0X804E1E4, "int setgid(__gid_t gid);");
	MakeFunction    (0X804E1E8,0X804E1EC);
	SetFunctionFlags(0X804E1E8,0x4400);
	SetType(0X804E1E8, "int puts(const char *s);");
	MakeFunction    (0X804E1EC,0X804E1F0);
	SetFunctionFlags(0X804E1EC,0x4400);
	SetType(0X804E1EC, "uint32_t ntohl(uint32_t netlong);");
	MakeFunction    (0X804E1F0,0X804E1F4);
	SetFunctionFlags(0X804E1F0,0x4401);
	SetType(0X804E1F0, "void exit(int status);");
	MakeFunction    (0X804E1F4,0X804E1F8);
	SetFunctionFlags(0X804E1F4,0x4400);
	SetType(0X804E1F4, "int kill(__pid_t pid, int sig);");
	MakeFunction    (0X804E1F8,0X804E1FC);
	SetFunctionFlags(0X804E1F8,0x4400);
	SetType(0X804E1F8, "int pclose(FILE *stream);");
	MakeFunction    (0X804E1FC,0X804E200);
	SetFunctionFlags(0X804E1FC,0x4400);
	SetType(0X804E1FC, "void srand(unsigned int seed);");
	MakeFunction    (0X804E200,0X804E204);
	SetFunctionFlags(0X804E200,0x4400);
	SetType(0X804E200, "char *strchr(const char *s, int c);");
	MakeFunction    (0X804E204,0X804E208);
	SetFunctionFlags(0X804E204,0x400);
	MakeFunction    (0X804E208,0X804E20C);
	SetFunctionFlags(0X804E208,0x4400);
	SetType(0X804E208, "int fprintf(FILE *stream, const char *format, ...);");
	MakeFunction    (0X804E20C,0X804E210);
	SetFunctionFlags(0X804E20C,0x4400);
	SetType(0X804E20C, "ssize_t write(int fd, const void *buf, size_t n);");
	MakeFunction    (0X804E210,0X804E214);
	SetFunctionFlags(0X804E210,0x4400);
	SetType(0X804E210, "int bind(int fd, const struct sockaddr *addr, socklen_t len);");
	MakeFunction    (0X804E214,0X804E218);
	SetFunctionFlags(0X804E214,0x4400);
	SetType(0X804E214, "__gid_t getgid(void);");
	MakeFunction    (0X804E218,0X804E21C);
	SetFunctionFlags(0X804E218,0x4400);
	SetType(0X804E218, "void *memset(void *s, int c, size_t n);");
	MakeFunction    (0X804E21C,0X804E220);
	SetFunctionFlags(0X804E21C,0x4400);
	SetType(0X804E21C, "int snprintf(char *s, size_t maxlen, const char *format, ...);");
	MakeFunction    (0X804E220,0X804E224);
	SetFunctionFlags(0X804E220,0x4400);
	SetType(0X804E220, "int pipe(int *pipedes);");
	MakeFunction    (0X804E224,0X804E228);
	SetFunctionFlags(0X804E224,0x4400);
	SetType(0X804E224, "int rand(void);");
	MakeFunction    (0X804E228,0X804E22C);
	SetFunctionFlags(0X804E228,0x4400);
	SetType(0X804E228, "ssize_t sendto(int fd, const void *buf, size_t n, int flags, const struct sockaddr *addr, socklen_t addr_len);");
	MakeFunction    (0X804E22C,0X804E230);
	SetFunctionFlags(0X804E22C,0x4400);
	SetType(0X804E22C, "int setegid(__gid_t gid);");
	MakeFunction    (0X804E230,0X804E234);
	SetFunctionFlags(0X804E230,0x4400);
	SetType(0X804E230, "__pid_t fork(void);");
	MakeFunction    (0X804E234,0X804E238);
	SetFunctionFlags(0X804E234,0x4400);
	SetType(0X804E234, "uint32_t htonl(uint32_t hostlong);");
	MakeFunction    (0X804E238,0X804E23C);
	SetFunctionFlags(0X804E238,0x4400);
	SetType(0X804E238, "uint16_t ntohs(uint16_t netshort);");
	MakeFunction    (0X804E23C,0X804E240);
	SetFunctionFlags(0X804E23C,0x4400);
	SetType(0X804E23C, "int setuid(__uid_t uid);");
	MakeFunction    (0X804E240,0X804E244);
	SetFunctionFlags(0X804E240,0x4400);
	SetType(0X804E240, "int sprintf(char *s, const char *format, ...);");
	MakeFunction    (0X804E244,0X804E248);
	SetFunctionFlags(0X804E244,0x4400);
	SetType(0X804E244, "int socket(int domain, int type, int protocol);");
	MakeFunction    (0X804E248,0X804E24C);
	SetFunctionFlags(0X804E248,0x400);
	MakeFunction    (0X804E24C,0X804E250);
	SetFunctionFlags(0X804E24C,0x4400);
	SetType(0X804E24C, "in_addr_t inet_addr(const char *cp);");
	MakeFunction    (0X804E250,0X804E254);
	SetFunctionFlags(0X804E250,0x4400);
	SetType(0X804E250, "int strncmp(const char *s1, const char *s2, size_t n);");
	MakeFunction    (0X804E254,0X804E258);
	SetFunctionFlags(0X804E254,0x4400);
	SetType(0X804E254, "int close(int fd);");
	MakeFunction    (0X804E258,0X804E25C);
	SetFunctionFlags(0X804E258,0x4400);
	SetType(0X804E258, "void *calloc(size_t nmemb, size_t size);");
	MakeFunction    (0X804E25C,0X804E260);
	SetFunctionFlags(0X804E25C,0x400);
}

//------------------------------------------------------------------------
// Information about functions

static Functions(void) {

	Functions_0();
}

//------------------------------------------------------------------------
// Information about segment registers

static SegRegs(void) {
	SetRegEx(0X80489A8,"es",0XFFFFFFFF,3);
	SetRegEx(0X80489A8,"ss",0XFFFFFFFF,3);
	SetRegEx(0X80489A8,"ds",0XD,3);
	SetRegEx(0X80489A8,"fs",0XFFFFFFFF,3);
	SetRegEx(0X80489A8,"gs",0XFFFFFFFF,3);
	SetRegEx(0X80489E0,"es",0XFFFFFFFF,3);
	SetRegEx(0X80489E0,"ss",0XFFFFFFFF,3);
	SetRegEx(0X80489E0,"ds",0XD,3);
	SetRegEx(0X80489E0,"fs",0XFFFFFFFF,3);
	SetRegEx(0X80489E0,"gs",0XFFFFFFFF,3);
	SetRegEx(0X8048D60,"es",0XFFFFFFFF,3);
	SetRegEx(0X8048D60,"ss",0XFFFFFFFF,3);
	SetRegEx(0X8048D60,"ds",0XD,3);
	SetRegEx(0X8048D60,"fs",0XFFFFFFFF,3);
	SetRegEx(0X8048D60,"gs",0XFFFFFFFF,3);
	SetRegEx(0X804C38C,"es",0XFFFFFFFF,3);
	SetRegEx(0X804C38C,"ss",0XFFFFFFFF,3);
	SetRegEx(0X804C38C,"ds",0XD,3);
	SetRegEx(0X804C38C,"fs",0XFFFFFFFF,3);
	SetRegEx(0X804C38C,"gs",0XFFFFFFFF,3);
	SetRegEx(0X804C3A8,"es",0XFFFFFFFF,3);
	SetRegEx(0X804C3A8,"ss",0XFFFFFFFF,3);
	SetRegEx(0X804C3A8,"ds",0XD,3);
	SetRegEx(0X804C3A8,"fs",0XFFFFFFFF,3);
	SetRegEx(0X804C3A8,"gs",0XFFFFFFFF,3);
	SetRegEx(0X804C750,"es",0XFFFFFFFF,3);
	SetRegEx(0X804C750,"ss",0XFFFFFFFF,3);
	SetRegEx(0X804C750,"ds",0XD,3);
	SetRegEx(0X804C750,"fs",0XFFFFFFFF,3);
	SetRegEx(0X804C750,"gs",0XFFFFFFFF,3);
	SetRegEx(0X804C82C,"es",0XFFFFFFFF,3);
	SetRegEx(0X804C82C,"ss",0XFFFFFFFF,3);
	SetRegEx(0X804C82C,"ds",0XD,3);
	SetRegEx(0X804C82C,"fs",0XFFFFFFFF,3);
	SetRegEx(0X804C82C,"gs",0XFFFFFFFF,3);
	SetRegEx(0X804DF14,"es",0XFFFFFFFF,3);
	SetRegEx(0X804DF14,"ss",0XFFFFFFFF,3);
	SetRegEx(0X804DF14,"ds",0XD,3);
	SetRegEx(0X804DF14,"fs",0XFFFFFFFF,3);
	SetRegEx(0X804DF14,"gs",0XFFFFFFFF,3);
	SetRegEx(0X804DF1C,"es",0XFFFFFFFF,3);
	SetRegEx(0X804DF1C,"ss",0XFFFFFFFF,3);
	SetRegEx(0X804DF1C,"ds",0XD,3);
	SetRegEx(0X804DF1C,"fs",0XFFFFFFFF,3);
	SetRegEx(0X804DF1C,"gs",0XFFFFFFFF,3);
	SetRegEx(0X804DF24,"es",0XFFFFFFFF,3);
	SetRegEx(0X804DF24,"ss",0XFFFFFFFF,3);
	SetRegEx(0X804DF24,"ds",0XD,3);
	SetRegEx(0X804DF24,"fs",0XFFFFFFFF,3);
	SetRegEx(0X804DF24,"gs",0XFFFFFFFF,3);
	SetRegEx(0X804DFF0,"es",0XFFFFFFFF,3);
	SetRegEx(0X804DFF0,"ss",0XFFFFFFFF,3);
	SetRegEx(0X804DFF0,"ds",0XD,3);
	SetRegEx(0X804DFF0,"fs",0XFFFFFFFF,3);
	SetRegEx(0X804DFF0,"gs",0XFFFFFFFF,3);
	SetRegEx(0X804DFF4,"es",0XFFFFFFFF,3);
	SetRegEx(0X804DFF4,"ss",0XFFFFFFFF,3);
	SetRegEx(0X804DFF4,"ds",0XD,3);
	SetRegEx(0X804DFF4,"fs",0XFFFFFFFF,3);
	SetRegEx(0X804DFF4,"gs",0XFFFFFFFF,3);
	SetRegEx(0X804E0E0,"es",0XFFFFFFFF,3);
	SetRegEx(0X804E0E0,"ss",0XFFFFFFFF,3);
	SetRegEx(0X804E0E0,"ds",0XD,3);
	SetRegEx(0X804E0E0,"fs",0XFFFFFFFF,3);
	SetRegEx(0X804E0E0,"gs",0XFFFFFFFF,3);
	SetRegEx(0X804E14C,"es",0XFFFFFFFF,3);
	SetRegEx(0X804E14C,"ss",0XFFFFFFFF,3);
	SetRegEx(0X804E14C,"ds",0XD,3);
	SetRegEx(0X804E14C,"fs",0XFFFFFFFF,3);
	SetRegEx(0X804E14C,"gs",0XFFFFFFFF,3);
	SetRegEx(0X804E184,"es",0XFFFFFFFF,3);
	SetRegEx(0X804E184,"ss",0XFFFFFFFF,3);
	SetRegEx(0X804E184,"ds",0XFFFFFFFF,3);
	SetRegEx(0X804E184,"fs",0XFFFFFFFF,3);
	SetRegEx(0X804E184,"gs",0XFFFFFFFF,3);
}

//------------------------------------------------------------------------
// Information about all patched bytes:

static Patches(void) {
}

//------------------------------------------------------------------------
// Call all byte feature functions:

static Bytes(void) {
	Bytes_0();
        EndTypeUpdating(UTP_STRUCT);
}

// End of file.
